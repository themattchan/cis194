{"status":"unsafe","types":{"172":{"22":{"ann":"{VV : a | VV == x}","ident":"x","row":172,"col":22},"1":{"ann":"forall a. (Example.List a) -> [a]","ident":"Example.toList","row":172,"col":1},"26":{"ann":"forall a. (Example.List a) -> [a]","ident":"Example.toList","row":172,"col":26},"33":{"ann":"{v : (Example.List a) | v == xs}","ident":"xs","row":172,"col":33},"24":{"ann":"x1:a\n-> x2:[a]\n-> {v : [a] | null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}","ident":"_","row":172,"col":24}},"37":{"7":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 < v}","ident":"_","row":37,"col":7},"17":{"ann":"{v : [a] | len v >= 0}","ident":"ds_d2vm","row":37,"col":17},"5":{"ann":"GHC.Types.Int","ident":"ds_d2vl","row":37,"col":5},"9":{"ann":"{v : GHC.Types.Int | v == (1  :  int)}","ident":"lq_anf__d2A4","row":37,"col":9}},"48":{"15":{"ann":"x1:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v == len x1}","ident":"lq_anf__d2Aw","row":48,"col":15},"25":{"ann":"GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]","ident":"Example.toDigits","row":48,"col":25},"1":{"ann":"GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]","ident":"Example.toDigitsRev","row":48,"col":1},"23":{"ann":"([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> (GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer])\n-> GHC.Integer.Type.Integer\n-> exists [[GHC.Integer.Type.Integer]].[GHC.Integer.Type.Integer]","ident":"_","row":48,"col":23}},"61":{"48":{"ann":"[GHC.Integer.Type.Integer] -> [GHC.Types.Char]","ident":"lq_anf__d2AO","row":61,"col":48},"1":{"ann":"[GHC.Integer.Type.Integer] -> [GHC.Types.Char]","ident":"Example.joinIntegers","row":61,"col":1},"16":{"ann":"(GHC.Types.Char -> GHC.Types.Bool)\n-> x3:[GHC.Types.Char] -> {v : [GHC.Types.Char] | len v <= len x3}","ident":"_","row":61,"col":16},"34":{"ann":"x1:{v : [GHC.Types.Char] | len v > 0}\n-> {v : [GHC.Types.Char] | len v == len x1 - 1}","ident":"lq_anf__d2AM","row":61,"col":34},"39":{"ann":"({v : [GHC.Types.Char] | len v >= 0} -> [GHC.Types.Char])\n-> ([GHC.Integer.Type.Integer]\n    -> {v : [GHC.Types.Char] | len v >= 0})\n-> [GHC.Integer.Type.Integer]\n-> exists [{v : [GHC.Types.Char] | len v >= 0}].[GHC.Types.Char]","ident":"_","row":61,"col":39},"46":{"ann":"(x2:[GHC.Types.Char]\n -> {v : [GHC.Types.Char] | v /= x2 && len v >= 0 && len v < len x2})\n-> ([GHC.Integer.Type.Integer] -> [GHC.Types.Char])\n-> [GHC.Integer.Type.Integer]\n-> exists [z:[GHC.Types.Char]].{v : [GHC.Types.Char] | v /= z && len v >= 0 && len v < len z}","ident":"_","row":61,"col":46},"27":{"ann":"GHC.Types.Char","ident":"_","row":61,"col":27},"41":{"ann":"x1:{v : [GHC.Types.Char] | len v > 0}\n-> {v : [GHC.Types.Char] | len v == len x1 - 1}","ident":"lq_anf__d2AN","row":61,"col":41},"24":{"ann":"x1:GHC.Types.Char\n-> x2:GHC.Types.Char -> {v : GHC.Types.Bool | Prop v <=> x1 /= v}","ident":"_","row":61,"col":24},"32":{"ann":"([GHC.Types.Char] -> [GHC.Types.Char])\n-> ([GHC.Integer.Type.Integer] -> [GHC.Types.Char])\n-> [GHC.Integer.Type.Integer]\n-> exists [[GHC.Types.Char]].[GHC.Types.Char]","ident":"_","row":61,"col":32}},"205":{"25":{"ann":"a","ident":"lq_anf__d2w5","row":205,"col":25},"31":{"ann":"forall a. {v : (Data.Maybe.Maybe a) | isJust v <=> false}","ident":"Data.Maybe.Nothing","row":205,"col":31},"14":{"ann":"{VV : a | VV == reserve}","ident":"reserve","row":205,"col":14},"12":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 > v}","ident":"_","row":205,"col":12},"23":{"ann":"x1:a\n-> x2:a\n-> {VV : a | x1 > 0 && x2 > 0 => VV >= x1 && VV >= x2 && x1 > 1 && x2 > 1 => VV > x1 && VV > x2 && x1 == 0 || x2 == 0 => VV == 0}","ident":"_","row":205,"col":23},"5":{"ann":"{VV : a | VV == amount}","ident":"amount","row":205,"col":5}},"25":{"1":{"ann":"GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]","ident":"Example.hailstoneSeq","row":25,"col":1},"18":{"ann":"{v : [GHC.Integer.Type.Integer] | null v <=> true && len v == 0 && len v >= 0}","ident":"lq_anf__d2Bf","row":25,"col":18}},"142":{"21":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wG","row":142,"col":21}},"183":{"31":{"ann":"{v : (Data.Maybe.Maybe (Example.NewTree [GHC.Types.Char])) | isJust v <=> false}","ident":"lq_anf__d2wp","row":183,"col":31},"14":{"ann":"[GHC.Types.Char]\n-> (Data.Maybe.Maybe (Example.NewTree [GHC.Types.Char]))\n-> (Data.Maybe.Maybe (Example.NewTree [GHC.Types.Char]))\n-> (Example.NewTree [GHC.Types.Char])","ident":"_","row":183,"col":14},"22":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wo","row":183,"col":22},"1":{"ann":"(Example.NewTree [GHC.Types.Char])","ident":"Example.simpleTree","row":183,"col":1},"40":{"ann":"x1:(Example.NewTree [GHC.Types.Char])\n-> {v : (Data.Maybe.Maybe (Example.NewTree [GHC.Types.Char])) | isJust v <=> true && fromJust v == x1}","ident":"_","row":183,"col":40},"62":{"ann":"{v : (Data.Maybe.Maybe (Example.NewTree [GHC.Types.Char])) | isJust v <=> false}","ident":"lq_anf__d2wr","row":183,"col":62},"70":{"ann":"{v : (Data.Maybe.Maybe (Example.NewTree [GHC.Types.Char])) | isJust v <=> false}","ident":"lq_anf__d2ws","row":183,"col":70},"46":{"ann":"[GHC.Types.Char]\n-> (Data.Maybe.Maybe (Example.NewTree [GHC.Types.Char]))\n-> (Data.Maybe.Maybe (Example.NewTree [GHC.Types.Char]))\n-> (Example.NewTree [GHC.Types.Char])","ident":"_","row":183,"col":46},"54":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wq","row":183,"col":54}},"208":{"22":{"ann":"{VV : a | VV == balance}","ident":"balance","row":208,"col":22},"30":{"ann":"x1:a -> x2:a -> {VV : a | VV == x1 - x2}","ident":"_","row":208,"col":30},"9":{"ann":"{VV : a | VV == balance - amount}","ident":"newBalance","row":208,"col":9},"32":{"ann":"{VV : a | VV == amount}","ident":"amount","row":208,"col":32}},"130":{"15":{"ann":"(GHC.Show.Show Example.Customer)","ident":"Example.$fShowCustomer","row":130,"col":15}},"129":{"3":{"ann":"Example.Customer -> [[GHC.Types.Char]]","ident":"Example.customerAddress","row":129,"col":3}},"13":{"14":{"ann":"x1:a\n-> x2:a\n-> {VV : a | x1 > 0 && x2 > 0 => VV >= x1 && VV >= x2 && x1 > 1 && x2 > 1 => VV > x1 && VV > x2 && x1 == 0 || x2 == 0 => VV == 0}","ident":"_","row":13,"col":14},"12":{"ann":"{VV : a | VV == x}","ident":"x","row":13,"col":12},"1":{"ann":"forall a. (GHC.Real.Integral [Bivariant]\n[] a) => a -> a","ident":"Example.square","row":13,"col":1},"16":{"ann":"{VV : a | VV == x}","ident":"x","row":13,"col":16},"8":{"ann":"a","ident":"x","row":13,"col":8}},"137":{"1":{"ann":"Example.Customer","ident":"Example.customer2","row":137,"col":1}},"173":{"14":{"ann":"forall a <p :: a a -> Prop>.\n{v : [a]<\\x4 VV -> p x4> | null v <=> true && len v == 0}","ident":"GHC.Types.[]","row":173,"col":14}},"123":{"30":{"ann":"(GHC.Show.Show Example.Polar2D)","ident":"Example.$fShowPolar2D","row":123,"col":30},"26":{"ann":"(GHC.Classes.Eq Example.Polar2D)","ident":"Example.$fEqPolar2D","row":123,"col":26}},"22":{"19":{"ann":"{v : GHC.Integer.Type.Integer | v == n}","ident":"n","row":22,"col":19},"17":{"ann":"GHC.Integer.Type.Integer","ident":"lq_anf__d2B6","row":22,"col":17},"18":{"ann":"x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}","ident":"_","row":22,"col":18},"21":{"ann":"x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + x2}","ident":"_","row":22,"col":21}},"189":{"26":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wn","row":189,"col":26},"20":{"ann":"[GHC.Types.Char] -> a","ident":"_","row":189,"col":20}},"88":{"15":{"ann":"{v : GHC.Types.Int | v == (9780135072455  :  int)}","ident":"lq_anf__d2wX","row":88,"col":15},"29":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wY","row":88,"col":29},"1":{"ann":"Example.BookInfo","ident":"Example.myInfo","row":88,"col":1},"10":{"ann":"GHC.Types.Int\n-> [GHC.Types.Char] -> [[GHC.Types.Char]] -> Example.BookInfo","ident":"_","row":88,"col":10}},"190":{"31":{"ann":"{v : [a] | v == xs && len v >= 0}","ident":"xs","row":190,"col":31},"26":{"ann":"x1:{v : [a] | len v > 0} -> {v : [a] | len v == len x1 - 1}","ident":"_","row":190,"col":26},"20":{"ann":"{v : [a] | len v > 0} -> a","ident":"_","row":190,"col":20}},"83":{"27":{"ann":"(GHC.Show.Show Example.BookInfo)","ident":"Example.$fShowBookInfo","row":83,"col":27}},"128":{"3":{"ann":"Example.Customer -> [GHC.Types.Char]","ident":"Example.customerName","row":128,"col":3}},"113":{"32":{"ann":"(GHC.Show.Show Example.BillingInfo)","ident":"Example.$fShowBillingInfo","row":113,"col":32}},"29":{"13":{"ann":"x1:[[GHC.Types.Char]] -> {v : GHC.Types.Int | v == len x1}","ident":"lq_anf__d2x5","row":29,"col":13},"22":{"ann":"[GHC.Types.Char] -> [[GHC.Types.Char]]","ident":"Data.List.lines","row":29,"col":22},"1":{"ann":"[GHC.Types.Char] -> GHC.Types.Int","ident":"Example.lineCount","row":29,"col":1},"20":{"ann":"([[GHC.Types.Char]] -> GHC.Types.Int)\n-> ([GHC.Types.Char] -> [[GHC.Types.Char]])\n-> [GHC.Types.Char]\n-> exists [[[GHC.Types.Char]]].GHC.Types.Int","ident":"_","row":29,"col":20}},"182":{"23":{"ann":"forall a.\n(GHC.Show.Show [Contravariant]\n[] a) =>\n(GHC.Show.Show (Example.NewTree a))","ident":"Example.$fShowNewTree","row":182,"col":23}},"86":{"31":{"ann":"(GHC.Show.Show Example.MagazineInfo)","ident":"Example.$fShowMagazineInfo","row":86,"col":31}},"169":{"36":{"ann":"{v : [a] | v == xs && len v >= 0}","ident":"xs","row":169,"col":36},"19":{"ann":"a -> (Example.List a) -> (Example.List a)","ident":"_","row":169,"col":19},"1":{"ann":"forall a. [a] -> (Example.List a)","ident":"Example.fromList","row":169,"col":1},"27":{"ann":"forall a. [a] -> (Example.List a)","ident":"Example.fromList","row":169,"col":27},"24":{"ann":"{VV : a | VV == x}","ident":"x","row":169,"col":24}},"170":{"19":{"ann":"forall a. (Example.List a)","ident":"Example.Nil","row":170,"col":19}},"53":{"43":{"ann":"{v : [GHC.Integer.Type.Integer] | len v > 0}\n-> [GHC.Integer.Type.Integer]","ident":"_","row":53,"col":43},"28":{"ann":"([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> ([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> [GHC.Integer.Type.Integer]\n-> exists [[GHC.Integer.Type.Integer]].[GHC.Integer.Type.Integer]","ident":"_","row":53,"col":28},"49":{"ann":"{v : [GHC.Integer.Type.Integer] | null v <=> false && len v >= 0}","ident":"lq_anf__d2AD","row":53,"col":49},"56":{"ann":"([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> ([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> [GHC.Integer.Type.Integer]\n-> exists [[GHC.Integer.Type.Integer]].[GHC.Integer.Type.Integer]","ident":"_","row":53,"col":56},"30":{"ann":"(GHC.Integer.Type.Integer\n -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> x4:[GHC.Integer.Type.Integer]\n-> x5:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v <= len x4 && len v <= len x5}","ident":"_","row":53,"col":30},"1":{"ann":"[GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]","ident":"Example.doubleEveryOther","row":53,"col":1},"20":{"ann":"x1:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v == len x1}","ident":"lq_anf__d2Ax","row":53,"col":20},"58":{"ann":"x1:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v == len x1}","ident":"lq_anf__d2AG","row":53,"col":58},"38":{"ann":"x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}","ident":"lq_anf__d2Ay","row":53,"col":38}},"17":{"15":{"ann":"GHC.Integer.Type.Integer","ident":"ds_d2vv","row":17,"col":15},"31":{"ann":"x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 - x2}","ident":"_","row":17,"col":31},"19":{"ann":"GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer","ident":"Example.sumtorial","row":17,"col":19},"30":{"ann":"GHC.Integer.Type.Integer","ident":"ds_d2vv","row":17,"col":30},"17":{"ann":"x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + x2}","ident":"_","row":17,"col":17}},"35":{"15":{"ann":"forall a <p :: a a -> Prop>.\n{v : [a]<\\x4 VV -> p x4> | null v <=> true && len v == 0}","ident":"GHC.Types.[]","row":35,"col":15},"1":{"ann":"forall a. GHC.Types.Int -> [a] -> [a]","ident":"Example.myDrop","row":35,"col":1}},"134":{"14":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wR","row":134,"col":14}},"45":{"25":{"ann":"x1:GHC.Types.Char\n-> x2:[GHC.Types.Char]\n-> {v : [GHC.Types.Char] | null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}","ident":"_","row":45,"col":25},"31":{"ann":"([GHC.Types.Char] -> [GHC.Integer.Type.Integer])\n-> (GHC.Integer.Type.Integer -> [GHC.Types.Char])\n-> GHC.Integer.Type.Integer\n-> exists [[GHC.Types.Char]].[GHC.Integer.Type.Integer]","ident":"_","row":45,"col":31},"22":{"ann":"([GHC.Types.Char] -> GHC.Integer.Type.Integer)\n-> (GHC.Types.Char -> [GHC.Types.Char])\n-> GHC.Types.Char\n-> exists [[GHC.Types.Char]].GHC.Integer.Type.Integer","ident":"_","row":45,"col":22},"12":{"ann":"(GHC.Types.Char -> GHC.Integer.Type.Integer)\n-> x3:[GHC.Types.Char]\n-> {v : [GHC.Integer.Type.Integer] | len v == len x3}","ident":"_","row":45,"col":12},"17":{"ann":"[GHC.Types.Char] -> GHC.Integer.Type.Integer","ident":"lq_anf__d2Ar","row":45,"col":17},"1":{"ann":"GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]","ident":"Example.toDigits","row":45,"col":1},"26":{"ann":"{v : [GHC.Types.Char] | null v <=> true && len v == 0}","ident":"_","row":45,"col":26},"33":{"ann":"GHC.Integer.Type.Integer -> [GHC.Types.Char]","ident":"lq_anf__d2Av","row":45,"col":33}},"188":{"29":{"ann":"{v : [a] | v == xs && len v >= 0}","ident":"xs","row":188,"col":29},"1":{"ann":"forall a. [a] -> a","ident":"Example.mySecond","row":188,"col":1},"18":{"ann":"x1:[a] -> {v : GHC.Types.Bool | Prop v <=> len x1 == 0}","ident":"_","row":188,"col":18},"24":{"ann":"x1:{v : [a] | len v > 0} -> {v : [a] | len v == len x1 - 1}","ident":"_","row":188,"col":24},"10":{"ann":"[a]","ident":"xs","row":188,"col":10}},"203":{"7":{"ann":"a","ident":"amount","row":203,"col":7},"14":{"ann":"a","ident":"balance","row":203,"col":14},"1":{"ann":"forall a.\n(GHC.Classes.Ord [Bivariant]\n[] a, GHC.Real.Fractional [Bivariant]\n[] a) =>\na -> a -> (Data.Maybe.Maybe a)","ident":"Example.lend3","row":203,"col":1}},"89":{"27":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2x0","row":89,"col":27},"11":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wZ","row":89,"col":11},"10":{"ann":"{v : [[GHC.Types.Char]] | null v <=> false && len v >= 0}","ident":"lq_anf__d2x3","row":89,"col":10}},"119":{"30":{"ann":"(GHC.Classes.Eq Example.Cartesian2D)","ident":"Example.$fEqCartesian2D","row":119,"col":30},"34":{"ann":"(GHC.Show.Show Example.Cartesian2D)","ident":"Example.$fShowCartesian2D","row":119,"col":34}},"141":{"22":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wJ","row":141,"col":22}},"206":{"31":{"ann":"x1:a\n-> {v : (Data.Maybe.Maybe a) | isJust v <=> true && fromJust v == x1}","ident":"_","row":206,"col":31},"36":{"ann":"{VV : a | VV == newBalance && VV == balance - amount}","ident":"newBalance","row":206,"col":36}},"194":{"31":{"ann":"{v : [a] | len v >= 0}","ident":"ds_d2v7","row":194,"col":31},"26":{"ann":"x1:{v : [a] | len v > 0} -> {v : [a] | len v == len x1 - 1}","ident":"_","row":194,"col":26},"20":{"ann":"x1:[a] -> {v : GHC.Types.Bool | Prop v <=> len x1 == 0}","ident":"_","row":194,"col":20}},"127":{"3":{"ann":"Example.Customer -> GHC.Types.Int","ident":"Example.customerID","row":127,"col":3}},"26":{"36":{"ann":"GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer","ident":"_","row":26,"col":36},"22":{"ann":"GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]","ident":"Example.hailstoneSeq","row":26,"col":22},"18":{"ann":"GHC.Integer.Type.Integer","ident":"ds_d2vs","row":26,"col":18},"20":{"ann":"x1:GHC.Integer.Type.Integer\n-> x2:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}","ident":"_","row":26,"col":20},"46":{"ann":"GHC.Integer.Type.Integer","ident":"ds_d2vs","row":26,"col":46}},"16":{"1":{"ann":"GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer","ident":"Example.sumtorial","row":16,"col":1}},"69":{"25":{"ann":"x1:GHC.Integer.Type.Integer\n-> x2:{v : GHC.Integer.Type.Integer | v /= 0}\n-> {v : GHC.Integer.Type.Integer | 0 <= x1 && 0 < x2 => 0 <= v && v < x2 && v == x1 mod x2}","ident":"lq_anf__d2AU","row":69,"col":25},"13":{"ann":"x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Types.Bool | Prop v <=> x1 == v}","ident":"_","row":69,"col":13},"44":{"ann":"([GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer)\n-> (GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer])\n-> GHC.Integer.Type.Integer\n-> exists [[GHC.Integer.Type.Integer]].GHC.Integer.Type.Integer","ident":"_","row":69,"col":44},"1":{"ann":"GHC.Integer.Type.Integer -> GHC.Types.Bool","ident":"Example.validate","row":69,"col":1},"18":{"ann":"(GHC.Integer.Type.Integer -> GHC.Types.Bool)\n-> (GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> GHC.Integer.Type.Integer\n-> exists [GHC.Integer.Type.Integer].GHC.Types.Bool","ident":"_","row":69,"col":18},"34":{"ann":"[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer","ident":"Example.sumDigits","row":69,"col":34},"20":{"ann":"(GHC.Integer.Type.Integer\n -> {v : GHC.Integer.Type.Integer | v > 0}\n -> GHC.Integer.Type.Integer)\n-> {v : GHC.Integer.Type.Integer | v > 0}\n-> GHC.Integer.Type.Integer\n-> GHC.Integer.Type.Integer","ident":"_","row":69,"col":20},"46":{"ann":"[GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]","ident":"Example.doubleEveryOther","row":69,"col":46},"63":{"ann":"([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> (GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer])\n-> GHC.Integer.Type.Integer\n-> exists [[GHC.Integer.Type.Integer]].[GHC.Integer.Type.Integer]","ident":"_","row":69,"col":63},"65":{"ann":"GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]","ident":"Example.toDigits","row":69,"col":65},"32":{"ann":"(GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> (GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> GHC.Integer.Type.Integer\n-> exists [GHC.Integer.Type.Integer].GHC.Integer.Type.Integer","ident":"_","row":69,"col":32}},"135":{"14":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wS","row":135,"col":14}},"165":{"25":{"ann":"forall a.\n(GHC.Show.Show [Contravariant]\n[] a) =>\n(GHC.Show.Show (Example.List a))","ident":"Example.$fShowList","row":165,"col":25}},"20":{"1":{"ann":"GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer","ident":"Example.hailstone","row":20,"col":1},"11":{"ann":"GHC.Integer.Type.Integer","ident":"n","row":20,"col":11}},"200":{"22":{"ann":"forall a. {v : (Data.Maybe.Maybe a) | isJust v <=> false}","ident":"Data.Maybe.Nothing","row":200,"col":22}},"64":{"13":{"ann":"[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer","ident":"lq_anf__d2AR","row":64,"col":13},"31":{"ann":"([GHC.Types.Char] -> [GHC.Integer.Type.Integer])\n-> ([GHC.Integer.Type.Integer] -> [GHC.Types.Char])\n-> [GHC.Integer.Type.Integer]\n-> exists [[GHC.Types.Char]].[GHC.Integer.Type.Integer]","ident":"_","row":64,"col":31},"19":{"ann":"[GHC.Types.Char] -> [GHC.Integer.Type.Integer]","ident":"Example.splitDigits","row":64,"col":19},"17":{"ann":"([GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer)\n-> ([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> [GHC.Integer.Type.Integer]\n-> exists [[GHC.Integer.Type.Integer]].GHC.Integer.Type.Integer","ident":"_","row":64,"col":17},"1":{"ann":"[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer","ident":"Example.sumDigits","row":64,"col":1},"33":{"ann":"[GHC.Integer.Type.Integer] -> [GHC.Types.Char]","ident":"Example.joinIntegers","row":64,"col":33}},"138":{"21":{"ann":"{v : GHC.Types.Int | v == (271828  :  int)}","ident":"lq_anf__d2wF","row":138,"col":21}},"195":{"22":{"ann":"forall a. {v : (Data.Maybe.Maybe a) | isJust v <=> false}","ident":"Data.Maybe.Nothing","row":195,"col":22}},"58":{"15":{"ann":"(GHC.Types.Char -> GHC.Integer.Type.Integer)\n-> x3:[GHC.Types.Char]\n-> {v : [GHC.Integer.Type.Integer] | len v == len x3}","ident":"_","row":58,"col":15},"36":{"ann":"GHC.Types.Char -> GHC.Types.Int","ident":"Data.Char.digitToInt","row":58,"col":36},"1":{"ann":"[GHC.Types.Char] -> [GHC.Integer.Type.Integer]","ident":"Example.splitDigits","row":58,"col":1},"20":{"ann":"x1:GHC.Types.Int -> {v : GHC.Integer.Type.Integer | v == x1}","ident":"lq_anf__d2AI","row":58,"col":20},"33":{"ann":"(GHC.Types.Int -> GHC.Integer.Type.Integer)\n-> (GHC.Types.Char -> GHC.Types.Int)\n-> GHC.Types.Char\n-> exists [GHC.Types.Int].GHC.Integer.Type.Integer","ident":"_","row":58,"col":33}},"140":{"22":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wI","row":140,"col":22}},"207":{"22":{"ann":"a","ident":"_","row":207,"col":22},"9":{"ann":"a","ident":"reserve","row":207,"col":9}},"132":{"13":{"ann":"GHC.Types.Int\n-> [GHC.Types.Char] -> [[GHC.Types.Char]] -> Example.Customer","ident":"_","row":132,"col":13},"22":{"ann":"{v : GHC.Types.Int | v == (271828  :  int)}","ident":"lq_anf__d2wO","row":132,"col":22},"29":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wP","row":132,"col":29},"1":{"ann":"Example.Customer","ident":"Example.customer1","row":132,"col":1}},"77":{"43":{"ann":"{v : [GHC.Types.Char] | v == a && len v >= 0}","ident":"a","row":77,"col":43},"36":{"ann":"{v : [GHC.Types.Char] | v == b && len v >= 0}","ident":"b","row":77,"col":36},"50":{"ann":"x1:[([GHC.Types.Char], [GHC.Types.Char])]\n-> x2:[([GHC.Types.Char], [GHC.Types.Char])]\n-> {v : [([GHC.Types.Char], [GHC.Types.Char])] | len v == len x1 + len v}","ident":"_","row":77,"col":50},"72":{"ann":"{v : [GHC.Types.Char] | v == a && len v >= 0}","ident":"a","row":77,"col":72},"29":{"ann":"GHC.Integer.Type.Integer","ident":"ds_d2vc","row":77,"col":29},"53":{"ann":"GHC.Integer.Type.Integer\n-> [GHC.Types.Char]\n-> [GHC.Types.Char]\n-> [GHC.Types.Char]\n-> [([GHC.Types.Char], [GHC.Types.Char])]","ident":"Example.hanoi","row":77,"col":53},"17":{"ann":"GHC.Integer.Type.Integer\n-> [GHC.Types.Char]\n-> [GHC.Types.Char]\n-> [GHC.Types.Char]\n-> [([GHC.Types.Char], [GHC.Types.Char])]","ident":"Example.hanoi","row":77,"col":17},"68":{"ann":"{v : [GHC.Types.Char] | v == c && len v >= 0}","ident":"c","row":77,"col":68},"70":{"ann":"{v : [GHC.Types.Char] | v == b && len v >= 0}","ident":"b","row":77,"col":70},"34":{"ann":"{v : [GHC.Types.Char] | v == c && len v >= 0}","ident":"c","row":77,"col":34},"46":{"ann":"{v : [GHC.Types.Char] | v == b && len v >= 0}","ident":"b","row":77,"col":46},"41":{"ann":"{v : [([GHC.Types.Char], [GHC.Types.Char])] | null v <=> false && len v >= 0}","ident":"lq_anf__d2Bt","row":77,"col":41},"38":{"ann":"x1:[([GHC.Types.Char], [GHC.Types.Char])]\n-> x2:[([GHC.Types.Char], [GHC.Types.Char])]\n-> {v : [([GHC.Types.Char], [GHC.Types.Char])] | len v == len x1 + len v}","ident":"_","row":77,"col":38},"65":{"ann":"GHC.Integer.Type.Integer","ident":"ds_d2vc","row":77,"col":65},"24":{"ann":"GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer","ident":"_","row":77,"col":24},"42":{"ann":"{v : ([GHC.Types.Char], [GHC.Types.Char]) | fst v == a && x_Tuple22 v == b && snd v == b && x_Tuple21 v == a}","ident":"lq_anf__d2Br","row":77,"col":42},"60":{"ann":"GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer","ident":"_","row":77,"col":60},"32":{"ann":"{v : [GHC.Types.Char] | v == a && len v >= 0}","ident":"a","row":77,"col":32}},"38":{"25":{"ann":"GHC.Types.Int","ident":"ds_d2vl","row":38,"col":25},"29":{"ann":"{v : GHC.Types.Int | v == (1  :  int)}","ident":"lq_anf__d2A7","row":38,"col":29},"17":{"ann":"forall a. GHC.Types.Int -> [a] -> [a]","ident":"Example.myDrop","row":38,"col":17},"27":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}","ident":"_","row":38,"col":27},"32":{"ann":"{v : [a] | v == xs && len v >= 0}","ident":"xs","row":38,"col":32}},"139":{"22":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wH","row":139,"col":22}},"193":{"17":{"ann":"forall a. {v : (Data.Maybe.Maybe a) | isJust v <=> false}","ident":"Data.Maybe.Nothing","row":193,"col":17},"1":{"ann":"forall a. [a] -> (Data.Maybe.Maybe a)","ident":"Example.safeSecond","row":193,"col":1}},"21":{"15":{"ann":"x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Types.Bool | Prop v <=> x1 == v}","ident":"_","row":21,"col":15},"7":{"ann":"x1:GHC.Integer.Type.Integer\n-> x2:{v : GHC.Integer.Type.Integer | v /= 0}\n-> {v : GHC.Integer.Type.Integer | 0 <= x1 && 0 < x2 => 0 <= v && v < x2 && v == x1 mod x2}","ident":"_","row":21,"col":7},"22":{"ann":"{v : GHC.Integer.Type.Integer | v == n}","ident":"n","row":21,"col":22},"5":{"ann":"{v : GHC.Integer.Type.Integer | v == n}","ident":"n","row":21,"col":5},"24":{"ann":"x1:GHC.Integer.Type.Integer\n-> x2:{v : GHC.Integer.Type.Integer | v /= 0}\n-> {v : GHC.Integer.Type.Integer | x1 >= 0 && x2 >= 0 => v >= 0 && x1 >= 0 && x2 >= 1 => v <= x1 && v == x1 / x2}","ident":"_","row":21,"col":24}},"204":{"15":{"ann":"a","ident":"lq_anf__d2vZ","row":204,"col":15},"31":{"ann":"forall a. {v : (Data.Maybe.Maybe a) | isJust v <=> false}","ident":"Data.Maybe.Nothing","row":204,"col":31},"12":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 <= v}","ident":"_","row":204,"col":12},"5":{"ann":"{VV : a | VV == amount}","ident":"amount","row":204,"col":5}},"196":{"28":{"ann":"{v : [a] | len v > 0} -> a","ident":"_","row":196,"col":28},"22":{"ann":"x1:a\n-> {v : (Data.Maybe.Maybe a) | isJust v <=> true && fromJust v == x1}","ident":"_","row":196,"col":22},"34":{"ann":"x1:{v : [a] | len v > 0} -> {v : [a] | len v == len x1 - 1}","ident":"_","row":196,"col":34},"39":{"ann":"{v : [a] | len v >= 0}","ident":"ds_d2v7","row":196,"col":39}},"178":{"13":{"ann":"[GHC.Types.Char]\n-> (Example.Tree [GHC.Types.Char])\n-> (Example.Tree [GHC.Types.Char])\n-> (Example.Tree [GHC.Types.Char])","ident":"_","row":178,"col":13},"53":{"ann":"(Example.Tree [GHC.Types.Char])","ident":"lq_anf__d2wy","row":178,"col":53},"1":{"ann":"(Example.Tree [GHC.Types.Char])","ident":"Example.firstTree","row":178,"col":1},"18":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wv","row":178,"col":18},"59":{"ann":"(Example.Tree [GHC.Types.Char])","ident":"lq_anf__d2wz","row":178,"col":59},"34":{"ann":"[GHC.Types.Char]\n-> (Example.Tree [GHC.Types.Char])\n-> (Example.Tree [GHC.Types.Char])\n-> (Example.Tree [GHC.Types.Char])","ident":"_","row":178,"col":34},"39":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wx","row":178,"col":39},"27":{"ann":"(Example.Tree [GHC.Types.Char])","ident":"lq_anf__d2ww","row":178,"col":27}},"177":{"25":{"ann":"forall a.\n(GHC.Show.Show [Contravariant]\n[] a) =>\n(GHC.Show.Show (Example.Tree a))","ident":"Example.$fShowTree","row":177,"col":25}},"76":{"13":{"ann":"[GHC.Types.Char]","ident":"c","row":76,"col":13},"22":{"ann":"{v : [GHC.Types.Char] | v == b && len v >= 0}","ident":"b","row":76,"col":22},"19":{"ann":"{v : [GHC.Types.Char] | v == a && len v >= 0}","ident":"a","row":76,"col":19},"17":{"ann":"{v : [([GHC.Types.Char], [GHC.Types.Char])] | null v <=> true && len v == 0 && len v >= 0}","ident":"lq_anf__d2By","row":76,"col":17},"1":{"ann":"GHC.Integer.Type.Integer\n-> [GHC.Types.Char]\n-> [GHC.Types.Char]\n-> [GHC.Types.Char]\n-> [([GHC.Types.Char], [GHC.Types.Char])]","ident":"Example.hanoi","row":76,"col":1},"18":{"ann":"{v : ([GHC.Types.Char], [GHC.Types.Char]) | fst v == a && x_Tuple22 v == b && snd v == b && x_Tuple21 v == a}","ident":"lq_anf__d2Bx","row":76,"col":18},"11":{"ann":"[GHC.Types.Char]","ident":"b","row":76,"col":11},"9":{"ann":"[GHC.Types.Char]","ident":"a","row":76,"col":9}},"32":{"13":{"ann":"x1:[[GHC.Types.Char]] -> {v : GHC.Types.Int | v == len x1}","ident":"lq_anf__d2x4","row":32,"col":13},"22":{"ann":"[GHC.Types.Char] -> [[GHC.Types.Char]]","ident":"Data.List.words","row":32,"col":22},"1":{"ann":"[GHC.Types.Char] -> GHC.Types.Int","ident":"Example.wordCount","row":32,"col":1},"20":{"ann":"([[GHC.Types.Char]] -> GHC.Types.Int)\n-> ([GHC.Types.Char] -> [[GHC.Types.Char]])\n-> [GHC.Types.Char]\n-> exists [[[GHC.Types.Char]]].GHC.Types.Int","ident":"_","row":32,"col":20}},"133":{"14":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d2wQ","row":133,"col":14}},"199":{"22":{"ann":"x1:a\n-> {v : (Data.Maybe.Maybe a) | isJust v <=> true && fromJust v == x1}","ident":"_","row":199,"col":22},"1":{"ann":"forall a. [a] -> (Data.Maybe.Maybe a)","ident":"Example.tidySecond","row":199,"col":1},"27":{"ann":"{VV : a | VV == x}","ident":"x","row":199,"col":27}}},"errors":[{"start":{"line":188,"column":29},"stop":{"line":188,"column":31},"message":"/Users/matt/Dropbox/cis194/01/flycheck_penn.hs:188:29-30: Error: Liquid Type Mismatch\n  Inferred type\n    VV : [a] | VV == xs && len VV >= 0\n \n  not a subtype of Required type\n    VV : [a] | len VV > 0\n \n  In Context\n    VV : [a] | VV == xs && len VV >= 0\n    xs : [a] | len v >= 0"},{"start":{"line":61,"column":41},"stop":{"line":61,"column":45},"message":"/Users/matt/Dropbox/cis194/01/flycheck_penn.hs:61:41-44: Error: Liquid Type Mismatch\n  Inferred type\n    VV : [Char]\n \n  not a subtype of Required type\n    VV : [Char] | len VV > 0\n \n  In Context\n    VV : [Char] | len VV >= 0"},{"start":{"line":61,"column":34},"stop":{"line":61,"column":38},"message":"/Users/matt/Dropbox/cis194/01/flycheck_penn.hs:61:34-37: Error: Liquid Type Mismatch\n  Inferred type\n    VV : [Char] | len VV >= 0\n \n  not a subtype of Required type\n    VV : [Char] | len VV > 0\n \n  In Context\n    VV : [Char] | len VV >= 0"},{"start":{"line":26,"column":36},"stop":{"line":26,"column":47},"message":"/Users/matt/Dropbox/cis194/01/flycheck_penn.hs:26:36-46: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Integer | VV == ?b\n \n  not a subtype of Required type\n    VV : Integer | VV >= 0 && VV < ?a\n \n  In Context\n    VV : Integer | VV == ?b\n    ?b : Integer\n    ?a : Integer"},{"start":{"line":17,"column":30},"stop":{"line":17,"column":33},"message":"/Users/matt/Dropbox/cis194/01/flycheck_penn.hs:17:30-32: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Integer | VV == ?b && VV == ?a - ?c\n \n  not a subtype of Required type\n    VV : Integer | VV >= 0 && VV < ?a\n \n  In Context\n    VV : Integer | VV == ?b && VV == ?a - ?c\n    ?b : Integer | ?b == ?a - ?c\n    ?a : Integer\n    ?c : Integer | ?c == 1"},{"start":{"line":77,"column":24},"stop":{"line":77,"column":30},"message":"/Users/matt/Dropbox/cis194/01/flycheck_penn.hs:77:24-29: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Integer | VV == ?b\n \n  not a subtype of Required type\n    VV : Integer | VV >= 0 && VV < ?a\n \n  In Context\n    VV : Integer | VV == ?b\n    ?b : Integer\n    ?a : Integer"},{"start":{"line":77,"column":60},"stop":{"line":77,"column":66},"message":"/Users/matt/Dropbox/cis194/01/flycheck_penn.hs:77:60-65: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Integer | VV == ?b\n \n  not a subtype of Required type\n    VV : Integer | VV >= 0 && VV < ?a\n \n  In Context\n    VV : Integer | VV == ?b\n    ?b : Integer\n    ?a : Integer"}]}