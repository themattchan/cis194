(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)
(set-option :smt.mbqi false)
(define-sort SMT_Elt () Int)
(define-sort SMT_Set () (Array SMT_Elt Bool))
(define-fun smt_set_emp () SMT_Set ((as const SMT_Set) false))
(define-fun smt_set_mem ((x SMT_Elt) (s SMT_Set)) Bool (select s x))
(define-fun smt_set_add ((s SMT_Set) (x SMT_Elt)) SMT_Set (store s x true))
(define-fun smt_set_cup ((s1 SMT_Set) (s2 SMT_Set)) SMT_Set ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 SMT_Set) (s2 SMT_Set)) SMT_Set ((_ map and) s1 s2))
(define-fun smt_set_com ((s SMT_Set)) SMT_Set ((_ map not) s))
(define-fun smt_set_dif ((s1 SMT_Set) (s2 SMT_Set)) SMT_Set (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 SMT_Set) (s2 SMT_Set)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(declare-fun z3v62 () Int)
(declare-fun z3v63 () Int)
(assert (distinct z3v62 z3v63))
(declare-fun z3v64 () Int)
(declare-fun z3f65 (Int) Int)
(declare-fun z3v66 () Int)
(declare-fun z3v67 () Int)
(declare-fun z3v68 () Int)
(declare-fun z3v69 () Int)
(declare-fun z3f70 (Int) Bool)
(declare-fun z3v71 () Int)
(declare-fun z3f72 (Int) Int)
(declare-fun z3v73 () Int)
(declare-fun z3v74 () Int)
(push 1)
(assert true)
(assert (and (>= (z3f65 z3v64) 0) (= z3v66 1) (= z3v68 z3v67) (>= (z3f65 z3v69) 0) (= z3v69 z3v64) (>= (z3f65 z3v69) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(declare-fun z3v75 () Int)
(push 1)
(assert (not (= z3v75 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v75 (+ (z3f65 z3v69) z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v75 (+ (z3f65 z3v69) z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v75 (z3f65 z3v69))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v75 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v75 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v75 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v75 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v75 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v75 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v75 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v75 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v75 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v75 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v75 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v75 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v75 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v75 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v75 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v75 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v75 z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v75 z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v75 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v75 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v75 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v75 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v75 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v75 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v75 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v75 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v75 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v75 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v75 z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v75 z3v68))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v76 () Int)
(push 1)
(assert true)
(assert (and (= z3v76 1) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(declare-fun z3v77 () Int)
(push 1)
(assert (not (= z3v77 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v77 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v77 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v77 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v77 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v77 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v77 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v77 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v77 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v77 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v77 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v77 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v77 z3v76))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v77 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v77 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v77 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v77 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v77 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v77 z3v76))))
(check-sat)
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert (and (= z3v76 1) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(declare-fun z3v78 () Int)
(push 1)
(assert (not (= z3v78 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v78 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v78 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v78 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v78 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v78 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v78 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v78 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v78 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v78 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v78 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v78 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v78 z3v76))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v78 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v78 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v78 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v78 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v78 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v78 z3v76))))
(check-sat)
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert (and (>= (z3f65 z3v64) 0) (= z3v66 1) (= z3v68 z3v67) (>= (z3f65 z3v69) 0) (= z3v69 z3v64) (>= (z3f65 z3v69) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(declare-fun z3v79 () Int)
(declare-fun z3v80 () Int)
(push 1)
(assert (not (= z3v79 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v79 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v79 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v79 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v79 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v79 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v79 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v79 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v79 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v79 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v79 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v79 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v79 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v79 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v79 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v79 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v79 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v79 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v79 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v79 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v79 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v79 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v79 z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v79 z3v80))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v79 z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v79 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v79 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v79 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v79 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v79 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v79 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v79 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v79 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v79 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v79 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v79 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v79 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v79 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v79 z3v80)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v79 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v79 z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v79 z3v80))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v79 z3v68))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v81 () Int)
(declare-fun z3v82 () Int)
(declare-fun z3v83 () Int)
(declare-fun z3v84 () Int)
(declare-fun z3v85 () Int)
(declare-fun z3f86 (Int) Int)
(declare-fun z3f87 (Int) Int)
(declare-fun z3f88 (Int) Bool)
(declare-fun z3f89 (Int Int) Int)
(declare-fun z3v90 () Int)
(declare-fun z3v91 () Int)
(declare-fun z3v92 () Int)
(declare-fun z3v93 () Int)
(push 1)
(assert true)
(assert (= z3v93 z3v91))
(assert (and (>= (z3f65 z3v81) 0) (not (z3f70 z3v82)) (not (z3f70 z3v82)) (= z3v82 z3v83) (>= (z3f65 z3v84) 0) (= (z3f86 z3v84) z3v85) (= (z3f87 z3v84) z3v81) (= (z3f65 z3v84) (+ 1 (z3f65 z3v81))) (= (z3f88 z3v84) false) (= z3v84 (z3f89 z3v85 z3v81)) (>= (z3f65 z3v84) 0) (= z3v84 z3v90) (>= (z3f65 z3v84) 0) (>= (z3f65 z3v90) 0) (= z3v92 z3v91) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(push 1)
(assert (not (>= z3v93 z3v91)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v93 z3v91)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v93 z3v91))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v93 z3v91)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v93 z3v91)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v94 () Int)
(push 1)
(assert true)
(assert (= z3v94 z3v64))
(assert (>= (z3f65 z3v94) 0))
(assert (and (>= (z3f65 z3v64) 0) (= z3v66 1) (= z3v68 z3v67) (>= (z3f65 z3v69) 0) (= z3v69 z3v64) (>= (z3f65 z3v69) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(push 1)
(assert (not (= (z3f65 z3v94) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  (z3f65 z3v94) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v67 (z3f65 z3v94))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v68 (z3f65 z3v94))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v94) (+ z3v67 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v94) (+ z3v68 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v94) (- z3v67 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v94) (- z3v68 1))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v95 () Int)
(declare-fun z3v96 () Int)
(declare-fun z3v97 () Int)
(declare-fun z3v98 () Int)
(declare-fun z3v99 () Int)
(declare-fun z3v100 () Int)
(declare-fun z3v101 () Int)
(declare-fun z3v102 () Int)
(push 1)
(assert true)
(assert (= z3v102 z3v97))
(assert (>= (z3f65 z3v102) 0))
(assert (and (>= (z3f65 z3v97) 0) (= z3v98 1) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v101) 0) (= z3v101 z3v97) (>= (z3f65 z3v101) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(push 1)
(assert (not (= (z3f65 z3v102) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  (z3f65 z3v102) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v67 (z3f65 z3v102))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v99 (z3f65 z3v102))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v68 (z3f65 z3v102))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v102) (+ z3v67 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v102) (+ z3v99 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v102) (+ z3v68 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v102) (- z3v67 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v102) (- z3v99 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v102) (- z3v68 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  (z3f65 z3v102) (z3f65 z3v96))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  (z3f65 z3v102) (z3f65 z3v100))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  (z3f65 z3v102) (z3f65 z3v95))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (z3f65 z3v102) (z3f65 z3v96))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (z3f65 z3v102) (z3f65 z3v100))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (z3f65 z3v102) (z3f65 z3v95))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (z3f65 z3v102) (z3f65 z3v96))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (z3f65 z3v102) (z3f65 z3v100))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (z3f65 z3v102) (z3f65 z3v95))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  (z3f65 z3v102) (z3f65 z3v96))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  (z3f65 z3v102) (z3f65 z3v100))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  (z3f65 z3v102) (z3f65 z3v95))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v102) (z3f65 z3v96))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v102) (z3f65 z3v100))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (z3f65 z3v102) (z3f65 z3v95))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v102 z3v96)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v102 z3v100)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v102 z3v95)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v102 z3v96)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v102 z3v100)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v102 z3v95)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v102 z3v96))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v102 z3v100))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v102 z3v95))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v102 z3v96)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v102 z3v100)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v102 z3v95)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v102 z3v96)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v102 z3v100)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v102 z3v95)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v102 z3v96)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v102 z3v100)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v102 z3v95)))
(check-sat)
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert (and (>= (z3f65 z3v97) 0) (= z3v98 1) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v101) 0) (= z3v101 z3v97) (>= (z3f65 z3v101) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(declare-fun z3v103 () Int)
(declare-fun z3v104 () Int)
(push 1)
(assert (not (= z3v103 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (+ (z3f65 z3v95) z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (+ (z3f65 z3v95) z3v104))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (+ (z3f65 z3v95) z3v99))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (+ (z3f65 z3v95) z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (+ (z3f65 z3v100) z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (+ (z3f65 z3v100) z3v104))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (+ (z3f65 z3v100) z3v99))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (+ (z3f65 z3v100) z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (+ (z3f65 z3v96) z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (+ (z3f65 z3v96) z3v104))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (+ (z3f65 z3v96) z3v99))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (+ (z3f65 z3v96) z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (z3f65 z3v96))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (z3f65 z3v100))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 (z3f65 z3v95))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v103 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v103 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v103 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v103 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v103 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v103 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v103 z3v104)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v103 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v103 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v103 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v103 z3v104)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v103 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v103 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 z3v104)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v103 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v103 z3v104)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v103 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v103 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v103 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v103 z3v104)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v103 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v103 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v103 z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v103 z3v104))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v103 z3v99))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v103 z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v103 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v103 z3v104)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v103 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v103 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v103 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v103 z3v104)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v103 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v103 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v103 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v103 z3v104)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v103 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v103 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v103 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v103 z3v104)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v103 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v103 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 z3v104)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v103 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v103 z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v103 z3v104))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v103 z3v99))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v103 z3v68))))
(check-sat)
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert (and (>= (z3f65 z3v97) 0) (= z3v98 1) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v101) 0) (= z3v101 z3v97) (>= (z3f65 z3v101) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(declare-fun z3v105 () Int)
(push 1)
(assert (not (= z3v105 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (+ (z3f65 z3v101) z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (+ (z3f65 z3v101) z3v99))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (+ (z3f65 z3v101) z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (+ (z3f65 z3v95) z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (+ (z3f65 z3v95) z3v99))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (+ (z3f65 z3v95) z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (+ (z3f65 z3v100) z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (+ (z3f65 z3v100) z3v99))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (+ (z3f65 z3v100) z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (+ (z3f65 z3v96) z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (+ (z3f65 z3v96) z3v99))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (+ (z3f65 z3v96) z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (z3f65 z3v96))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (z3f65 z3v100))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (z3f65 z3v95))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 (z3f65 z3v101))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v105 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v105 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v105 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v105 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v105 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v105 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v105 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v105 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v105 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v105 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v105 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v105 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v105 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v105 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v105 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v105 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v105 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v105 z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v105 z3v99))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v105 z3v68))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v105 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v105 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v105 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v105 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v105 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v105 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v105 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v105 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v105 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v105 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v105 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v105 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 z3v67)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 z3v99)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v105 z3v68)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v105 z3v67))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v105 z3v99))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v105 z3v68))))
(check-sat)
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert (and (= z3v76 1) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(declare-fun z3v106 () Int)
(push 1)
(assert (not (= z3v106 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v106 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v106 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v106 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v106 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v106 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v106 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v106 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v106 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v106 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v106 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v106 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v106 z3v76))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v106 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v106 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v106 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v106 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v106 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v106 z3v76))))
(check-sat)
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert (and (= z3v76 1) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(declare-fun z3v107 () Int)
(push 1)
(assert (not (= z3v107 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v107 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v107 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v107 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v107 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v107 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v107 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v107 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v107 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v107 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v107 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v107 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v107 z3v76))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v107 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v107 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v107 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v107 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v107 z3v76)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v107 z3v76))))
(check-sat)
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert (and (= z3v76 1) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(declare-fun z3v108 () Int)
(push 1)
(assert (not (>= z3v108 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v108 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v108 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v108 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v108 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v108 0)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v109 () Int)
(declare-fun z3v110 () Int)
(declare-fun z3v111 () Int)
(declare-fun z3v112 () Int)
(declare-fun z3v113 () Int)
(declare-fun z3v114 () Int)
(declare-fun z3v115 () Int)
(declare-fun z3v116 () Int)
(declare-fun z3v117 () Int)
(declare-fun z3v118 () Int)
(push 1)
(assert true)
(assert (= z3v118 (+ z3v112 z3v110)))
(assert (and (= z3v110 z3v109) (= z3v109 1) (=> (and (>  z3v111 0) (>  z3v113 0)) (and (>= z3v112 z3v111) (>= z3v112 z3v113))) (=> (or (= z3v111 0) (= z3v113 0)) (= z3v112 0)) (=> (and (>  z3v111 1) (>  z3v113 1)) (and (>  z3v112 z3v111) (>  z3v112 z3v113))) (= z3v111 z3v114) (= z3v114 3) (not (z3f70 z3v115)) (not (z3f70 z3v115)) (= z3v115 z3v116) (= z3v117 (+ z3v112 z3v110)) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(push 1)
(assert (not (>= z3v118 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v118 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v118 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v118 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v118 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v118 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v118 z3v113)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v118 z3v113)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v118 z3v113))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v118 z3v113)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v118 z3v113)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v118 z3v113)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v119 () Int)
(declare-fun z3v120 () Int)
(declare-fun z3v121 () Int)
(declare-fun z3v122 () Int)
(declare-fun z3v123 () Int)
(declare-fun z3v124 () Int)
(push 1)
(assert true)
(assert (= z3v124 z3v91))
(assert (and (not (z3f70 z3v119)) (not (z3f70 z3v119)) (= z3v119 z3v120) (= (z3f70 z3v119) (= z3v122 z3v121)) (= (z3f70 z3v120) (= z3v122 z3v121)) (= z3v121 1) (= z3v123 z3v91) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(push 1)
(assert (not (>= z3v124 z3v91)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v124 z3v91)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v124 z3v91))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v124 z3v91)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v124 z3v91)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v125 () Int)
(declare-fun z3v126 () Int)
(declare-fun z3v127 () Int)
(declare-fun z3v128 () Int)
(declare-fun z3v129 () Int)
(push 1)
(assert true)
(assert (= z3v129 z3v91))
(assert (and (not (z3f70 z3v119)) (not (z3f70 z3v119)) (= z3v119 z3v120) (= (z3f70 z3v119) (= z3v122 z3v121)) (= (z3f70 z3v120) (= z3v122 z3v121)) (= z3v121 1) (not (z3f70 z3v126)) (not (z3f70 z3v126)) (= z3v126 z3v127) (= z3v128 z3v91) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (= z3v125 z3v91))
(assert (>= z3v125 z3v91))
(assert (<= z3v125 z3v91))
(push 1)
(assert (not (>= z3v129 z3v125)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v129 z3v91)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v129 z3v125)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v129 z3v91)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v129 z3v125))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v129 z3v91))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v129 z3v125)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v129 z3v91)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v129 z3v125)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v129 z3v91)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v129 z3v125)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v130 () Int)
(push 1)
(assert true)
(assert (= z3v130 (+ z3v112 z3v110)))
(assert (and (= z3v110 z3v109) (= z3v109 1) (=> (and (>  z3v111 0) (>  z3v113 0)) (and (>= z3v112 z3v111) (>= z3v112 z3v113))) (=> (or (= z3v111 0) (= z3v113 0)) (= z3v112 0)) (=> (and (>  z3v111 1) (>  z3v113 1)) (and (>  z3v112 z3v111) (>  z3v112 z3v113))) (= z3v111 z3v114) (= z3v114 3) (not (z3f70 z3v115)) (not (z3f70 z3v115)) (= z3v115 z3v116) (= z3v117 (+ z3v112 z3v110)) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(pop 1)
(declare-fun z3v131 () Int)
(declare-fun z3v132 () Int)
(declare-fun z3v133 () Int)
(push 1)
(assert true)
(assert (= z3v133 z3v132))
(assert (= z3v133 z3v131))
(assert (and (= z3v132 z3v131) (= z3v131 2) (z3f70 z3v115) (z3f70 z3v115) (= z3v115 z3v116) (= z3v117 z3v132) (= z3v117 z3v131) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(push 1)
(assert (not (not (= z3v133 0))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3f134 (Int Int) Int)
(declare-fun z3v135 () Int)
(push 1)
(assert true)
(assert (and (= z3v135 (z3f134 z3v113 z3v132)) (=> (and (>= z3v113 0) (>= z3v132 1)) (<= z3v135 z3v113)) (=> (and (>= z3v113 0) (>= z3v132 0)) (>= z3v135 0))))
(assert (and (= z3v132 z3v131) (= z3v131 2) (z3f70 z3v115) (z3f70 z3v115) (= z3v115 z3v116) (= z3v117 (z3f134 z3v113 z3v132)) (=> (and (>= z3v113 0) (>= z3v132 1)) (<= z3v117 z3v113)) (=> (and (>= z3v113 0) (>= z3v132 0)) (>= z3v117 0)) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(pop 1)
(push 1)
(assert true)
(assert (and (= z3v76 1) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(pop 1)
(push 1)
(assert true)
(assert (and (= z3v76 1) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(pop 1)
(push 1)
(assert true)
(assert (and (= z3v76 1) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(pop 1)
(push 1)
(assert true)
(assert (and (= z3v76 1) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(pop 1)
(push 1)
(assert true)
(assert (and (= z3v76 1) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(pop 1)
(push 1)
(assert true)
(assert (and (= z3v76 1) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(pop 1)
(declare-fun z3v136 () Int)
(declare-fun z3v137 () Int)
(declare-fun z3v138 () Int)
(declare-fun z3v139 () Int)
(declare-fun z3v140 () Int)
(declare-fun z3v141 () Int)
(declare-fun z3v142 () Int)
(push 1)
(assert true)
(assert (= z3v142 z3v139))
(assert (= z3v142 (+ z3v138 z3v137)))
(assert (and (not (z3f70 z3v119)) (not (z3f70 z3v119)) (= z3v119 z3v120) (= (z3f70 z3v119) (= z3v122 z3v121)) (= (z3f70 z3v120) (= z3v122 z3v121)) (= z3v121 1) (= z3v139 (+ z3v138 z3v137)) (= z3v137 1) (=> (and (>  z3v140 0) (>  z3v122 0)) (and (>= z3v138 z3v140) (>= z3v138 z3v122))) (=> (or (= z3v140 0) (= z3v122 0)) (= z3v138 0)) (=> (and (>  z3v140 1) (>  z3v122 1)) (and (>  z3v138 z3v140) (>  z3v138 z3v122))) (= z3v140 3) (not (z3f70 z3v126)) (not (z3f70 z3v126)) (= z3v126 z3v127) (= z3v141 z3v139) (= z3v141 (+ z3v138 z3v137)) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (= z3v125 z3v91))
(assert (= z3v136 z3v125))
(assert (= z3v136 z3v91))
(push 1)
(assert (not (and (>= z3v142 0) (<  z3v142 z3v122))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v143 () Int)
(push 1)
(assert true)
(assert (= z3v143 z3v91))
(assert (and (not (z3f70 z3v119)) (not (z3f70 z3v119)) (= z3v119 z3v120) (= (z3f70 z3v119) (= z3v122 z3v121)) (= (z3f70 z3v120) (= z3v122 z3v121)) (= z3v121 1) (not (z3f70 z3v126)) (not (z3f70 z3v126)) (= z3v126 z3v127) (= z3v128 z3v91) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (= z3v125 z3v91))
(push 1)
(assert (not (and (= z3v143 z3v91) (= z3v143 z3v125))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v144 () Int)
(declare-fun z3v145 () Int)
(declare-fun z3v146 () Int)
(push 1)
(assert true)
(assert (= z3v146 z3v144))
(assert (= z3v146 2))
(assert (and (not (z3f70 z3v119)) (not (z3f70 z3v119)) (= z3v119 z3v120) (= (z3f70 z3v119) (= z3v122 z3v121)) (= (z3f70 z3v120) (= z3v122 z3v121)) (= z3v121 1) (= z3v144 2) (z3f70 z3v126) (z3f70 z3v126) (= z3v126 z3v127) (= z3v145 z3v144) (= z3v145 2) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (= z3v125 z3v91))
(push 1)
(assert (not (not (= z3v146 0))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v147 () Int)
(declare-fun z3v148 () Int)
(declare-fun z3v149 () Int)
(push 1)
(assert true)
(assert (= z3v149 z3v147))
(assert (and (= z3v149 (z3f134 z3v122 z3v144)) (=> (and (>= z3v122 0) (>= z3v144 1)) (<= z3v149 z3v122)) (=> (and (>= z3v122 0) (>= z3v144 0)) (>= z3v149 0))))
(assert (and (not (z3f70 z3v119)) (not (z3f70 z3v119)) (= z3v119 z3v120) (= (z3f70 z3v119) (= z3v122 z3v121)) (= (z3f70 z3v120) (= z3v122 z3v121)) (= z3v121 1) (= z3v147 (z3f134 z3v122 z3v144)) (=> (and (>= z3v122 0) (>= z3v144 1)) (<= z3v147 z3v122)) (=> (and (>= z3v122 0) (>= z3v144 0)) (>= z3v147 0)) (= z3v144 2) (z3f70 z3v126) (z3f70 z3v126) (= z3v126 z3v127) (= z3v148 z3v147) (= z3v148 (z3f134 z3v122 z3v144)) (=> (and (>= z3v122 0) (>= z3v144 1)) (<= z3v148 z3v122)) (=> (and (>= z3v122 0) (>= z3v144 0)) (>= z3v148 0)) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (= z3v125 z3v91))
(push 1)
(assert (not (and (>= z3v149 0) (<  z3v149 z3v122))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v150 () Int)
(push 1)
(assert true)
(assert (= z3v150 z3v91))
(assert (and (not (z3f70 z3v119)) (not (z3f70 z3v119)) (= z3v119 z3v120) (= (z3f70 z3v119) (= z3v122 z3v121)) (= (z3f70 z3v120) (= z3v122 z3v121)) (= z3v121 1) (= z3v123 z3v91) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(push 1)
(assert (not (= z3v150 z3v91)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v151 () Int)
(declare-fun z3v152 () Int)
(declare-fun z3v153 () Int)
(push 1)
(assert true)
(assert (= z3v153 z3v81))
(assert (>= (z3f65 z3v153) 0))
(assert (and (>= (z3f65 z3v81) 0) (not (z3f70 z3v82)) (not (z3f70 z3v82)) (= z3v82 z3v83) (>= (z3f65 z3v84) 0) (= (z3f86 z3v84) z3v85) (= (z3f87 z3v84) z3v81) (= (z3f65 z3v84) (+ 1 (z3f65 z3v81))) (= (z3f88 z3v84) false) (= z3v84 (z3f89 z3v85 z3v81)) (>= (z3f65 z3v84) 0) (= z3v84 z3v90) (>= (z3f65 z3v84) 0) (>= (z3f65 z3v90) 0) (>= (z3f65 z3v152) 0) (= z3v152 z3v81) (>= (z3f65 z3v152) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (= z3v151 z3v91))
(push 1)
(assert (not (and (>= (z3f65 z3v153) 0) (<  (z3f65 z3v153) (z3f65 z3v90)))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v154 () Int)
(push 1)
(assert true)
(assert (= z3v154 z3v91))
(assert (and (>= (z3f65 z3v81) 0) (not (z3f70 z3v82)) (not (z3f70 z3v82)) (= z3v82 z3v83) (>= (z3f65 z3v84) 0) (= (z3f86 z3v84) z3v85) (= (z3f87 z3v84) z3v81) (= (z3f65 z3v84) (+ 1 (z3f65 z3v81))) (= (z3f88 z3v84) false) (= z3v84 (z3f89 z3v85 z3v81)) (>= (z3f65 z3v84) 0) (= z3v84 z3v90) (>= (z3f65 z3v84) 0) (>= (z3f65 z3v90) 0) (= z3v92 z3v91) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(push 1)
(assert (not (= z3v154 z3v91)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v155 () Int)
(declare-fun z3v156 () Int)
(declare-fun z3v157 () Int)
(declare-fun z3v158 () Int)
(push 1)
(assert true)
(assert (= z3v158 z3v81))
(assert (>= (z3f65 z3v158) 0))
(assert (and (>= (z3f65 z3v81) 0) (= z3v156 (- z3v85 z3v155)) (= z3v155 2) (z3f70 z3v82) (z3f70 z3v82) (= z3v82 z3v83) (>= (z3f65 z3v84) 0) (= (z3f86 z3v84) z3v85) (= (z3f87 z3v84) z3v81) (= (z3f65 z3v84) (+ 1 (z3f65 z3v81))) (= (z3f88 z3v84) false) (= z3v84 (z3f89 z3v85 z3v81)) (>= (z3f65 z3v84) 0) (= z3v84 z3v90) (>= (z3f65 z3v84) 0) (>= (z3f65 z3v90) 0) (>= (z3f65 z3v157) 0) (= z3v157 z3v81) (>= (z3f65 z3v157) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(push 1)
(assert (not (and (>= (z3f65 z3v158) 0) (<  (z3f65 z3v158) (z3f65 z3v90)))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v159 () Int)
(declare-fun z3v160 () Int)
(declare-fun z3f161 () Int)
(declare-fun z3v162 () Int)
(push 1)
(assert true)
(assert (and (>= (z3f65 z3v160) 0) (= (z3f65 z3v160) 0) (= (z3f88 z3v160) true) (= z3v160 z3f161) (>= (z3f65 z3v160) 0) (= z3v160 z3v159) (>= (z3f65 z3v160) 0) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v159) 0) (>= (z3f65 z3v162) 0) (= z3v162 z3v100) (>= (z3f65 z3v162) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v160) 0))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(assert (>= (z3f65 z3v159) 0))
(pop 1)
(push 1)
(assert true)
(assert (and (>= (z3f65 z3v160) 0) (= (z3f65 z3v160) 0) (= (z3f88 z3v160) true) (= z3v160 z3f161) (>= (z3f65 z3v160) 0) (= z3v160 z3v159) (>= (z3f65 z3v160) 0) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v159) 0) (>= (z3f65 z3v162) 0) (= z3v162 z3v100) (>= (z3f65 z3v162) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v160) 0))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(assert (>= (z3f65 z3v159) 0))
(pop 1)
(declare-fun z3v163 () Int)
(push 1)
(assert true)
(assert (= z3v163 z3v100))
(assert (>= (z3f65 z3v163) 0))
(assert (and (>= (z3f65 z3v160) 0) (= (z3f65 z3v160) 0) (= (z3f88 z3v160) true) (= z3v160 z3f161) (>= (z3f65 z3v160) 0) (= z3v160 z3v159) (>= (z3f65 z3v160) 0) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v159) 0) (>= (z3f65 z3v162) 0) (= z3v162 z3v100) (>= (z3f65 z3v162) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v160) 0))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(assert (>= (z3f65 z3v159) 0))
(push 1)
(assert (not (and (>= (z3f65 z3v163) 0) (<  (z3f65 z3v163) (z3f65 z3v95)))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v164 () Int)
(push 1)
(assert true)
(assert (= z3v164 z3v100))
(assert (>= (z3f65 z3v164) 0))
(assert (and (>= (z3f65 z3v160) 0) (= (z3f65 z3v160) 0) (= (z3f88 z3v160) true) (= z3v160 z3f161) (>= (z3f65 z3v160) 0) (= z3v160 z3v159) (>= (z3f65 z3v160) 0) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v159) 0) (>= (z3f65 z3v162) 0) (= z3v162 z3v100) (>= (z3f65 z3v162) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v160) 0))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(assert (>= (z3f65 z3v159) 0))
(push 1)
(assert (not (>= (z3f65 z3v164) 0)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v165 () Int)
(declare-fun z3v166 () Int)
(declare-fun z3v167 () Int)
(declare-fun z3v168 () Int)
(declare-fun z3v169 () Int)
(push 1)
(assert true)
(assert (and (not (z3f70 z3v165)) (not (z3f70 z3v165)) (= z3v165 z3v166) (= (z3f70 z3v165) (<= z3v99 z3v167)) (= (z3f70 z3v166) (<= z3v99 z3v167)) (>= (z3f65 z3v160) 0) (= (z3f86 z3v160) z3v167) (= (z3f87 z3v160) z3v168) (= (z3f65 z3v160) (+ 1 (z3f65 z3v168))) (= (z3f88 z3v160) false) (= z3v160 (z3f89 z3v167 z3v168)) (>= (z3f65 z3v160) 0) (= z3v160 z3v159) (>= (z3f65 z3v160) 0) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v168) 0) (>= (z3f65 z3v159) 0) (>= (z3f65 z3v169) 0) (= z3v169 z3v168) (>= (z3f65 z3v169) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v160) 0))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(assert (>= (z3f65 z3v159) 0))
(pop 1)
(push 1)
(assert true)
(assert (and (not (z3f70 z3v165)) (not (z3f70 z3v165)) (= z3v165 z3v166) (= (z3f70 z3v165) (<= z3v99 z3v167)) (= (z3f70 z3v166) (<= z3v99 z3v167)) (>= (z3f65 z3v160) 0) (= (z3f86 z3v160) z3v167) (= (z3f87 z3v160) z3v168) (= (z3f65 z3v160) (+ 1 (z3f65 z3v168))) (= (z3f88 z3v160) false) (= z3v160 (z3f89 z3v167 z3v168)) (>= (z3f65 z3v160) 0) (= z3v160 z3v159) (>= (z3f65 z3v160) 0) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v168) 0) (>= (z3f65 z3v159) 0) (>= (z3f65 z3v169) 0) (= z3v169 z3v168) (>= (z3f65 z3v169) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v160) 0))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(assert (>= (z3f65 z3v159) 0))
(pop 1)
(declare-fun z3v170 () Int)
(push 1)
(assert true)
(assert (= z3v170 z3v168))
(assert (>= (z3f65 z3v170) 0))
(assert (and (not (z3f70 z3v165)) (not (z3f70 z3v165)) (= z3v165 z3v166) (= (z3f70 z3v165) (<= z3v99 z3v167)) (= (z3f70 z3v166) (<= z3v99 z3v167)) (>= (z3f65 z3v160) 0) (= (z3f86 z3v160) z3v167) (= (z3f87 z3v160) z3v168) (= (z3f65 z3v160) (+ 1 (z3f65 z3v168))) (= (z3f88 z3v160) false) (= z3v160 (z3f89 z3v167 z3v168)) (>= (z3f65 z3v160) 0) (= z3v160 z3v159) (>= (z3f65 z3v160) 0) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v168) 0) (>= (z3f65 z3v159) 0) (>= (z3f65 z3v169) 0) (= z3v169 z3v168) (>= (z3f65 z3v169) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v160) 0))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(assert (>= (z3f65 z3v159) 0))
(push 1)
(assert (not (and (>= (z3f65 z3v170) 0) (<  (z3f65 z3v170) (z3f65 z3v159)))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v171 () Int)
(push 1)
(assert true)
(assert (= z3v171 z3v168))
(assert (>= (z3f65 z3v171) 0))
(assert (and (not (z3f70 z3v165)) (not (z3f70 z3v165)) (= z3v165 z3v166) (= (z3f70 z3v165) (<= z3v99 z3v167)) (= (z3f70 z3v166) (<= z3v99 z3v167)) (>= (z3f65 z3v160) 0) (= (z3f86 z3v160) z3v167) (= (z3f87 z3v160) z3v168) (= (z3f65 z3v160) (+ 1 (z3f65 z3v168))) (= (z3f88 z3v160) false) (= z3v160 (z3f89 z3v167 z3v168)) (>= (z3f65 z3v160) 0) (= z3v160 z3v159) (>= (z3f65 z3v160) 0) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v168) 0) (>= (z3f65 z3v159) 0) (>= (z3f65 z3v169) 0) (= z3v169 z3v168) (>= (z3f65 z3v169) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v160) 0))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(assert (>= (z3f65 z3v159) 0))
(push 1)
(assert (not (>= (z3f65 z3v171) 0)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v172 () Int)
(declare-fun z3v173 () Int)
(declare-fun z3v174 () Int)
(declare-fun z3v175 () Int)
(declare-fun z3v176 () Int)
(declare-fun z3v177 () Int)
(push 1)
(assert true)
(assert (and (= z3v174 (+ z3v173 z3v172)) (=> (and (>  z3v175 0) (>  z3v167 0)) (and (>= z3v172 z3v175) (>= z3v172 z3v167))) (=> (or (= z3v175 0) (= z3v167 0)) (= z3v172 0)) (=> (and (>  z3v175 1) (>  z3v167 1)) (and (>  z3v172 z3v175) (>  z3v172 z3v167))) (=> (and (>  z3v176 0) (>  z3v99 0)) (and (>= z3v175 z3v176) (>= z3v175 z3v99))) (=> (or (= z3v176 0) (= z3v99 0)) (= z3v175 0)) (=> (and (>  z3v176 1) (>  z3v99 1)) (and (>  z3v175 z3v176) (>  z3v175 z3v99))) (= z3v176 2) (= z3v173 (+ z3v99 z3v167)) (z3f70 z3v165) (z3f70 z3v165) (= z3v165 z3v166) (= (z3f70 z3v165) (<= z3v99 z3v167)) (= (z3f70 z3v166) (<= z3v99 z3v167)) (>= (z3f65 z3v160) 0) (= (z3f86 z3v160) z3v167) (= (z3f87 z3v160) z3v168) (= (z3f65 z3v160) (+ 1 (z3f65 z3v168))) (= (z3f88 z3v160) false) (= z3v160 (z3f89 z3v167 z3v168)) (>= (z3f65 z3v160) 0) (= z3v160 z3v159) (>= (z3f65 z3v160) 0) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v168) 0) (>= (z3f65 z3v159) 0) (>= (z3f65 z3v177) 0) (= z3v177 z3v168) (>= (z3f65 z3v177) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v160) 0))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(assert (>= (z3f65 z3v159) 0))
(pop 1)
(push 1)
(assert true)
(assert (and (= z3v174 (+ z3v173 z3v172)) (=> (and (>  z3v175 0) (>  z3v167 0)) (and (>= z3v172 z3v175) (>= z3v172 z3v167))) (=> (or (= z3v175 0) (= z3v167 0)) (= z3v172 0)) (=> (and (>  z3v175 1) (>  z3v167 1)) (and (>  z3v172 z3v175) (>  z3v172 z3v167))) (=> (and (>  z3v176 0) (>  z3v99 0)) (and (>= z3v175 z3v176) (>= z3v175 z3v99))) (=> (or (= z3v176 0) (= z3v99 0)) (= z3v175 0)) (=> (and (>  z3v176 1) (>  z3v99 1)) (and (>  z3v175 z3v176) (>  z3v175 z3v99))) (= z3v176 2) (= z3v173 (+ z3v99 z3v167)) (z3f70 z3v165) (z3f70 z3v165) (= z3v165 z3v166) (= (z3f70 z3v165) (<= z3v99 z3v167)) (= (z3f70 z3v166) (<= z3v99 z3v167)) (>= (z3f65 z3v160) 0) (= (z3f86 z3v160) z3v167) (= (z3f87 z3v160) z3v168) (= (z3f65 z3v160) (+ 1 (z3f65 z3v168))) (= (z3f88 z3v160) false) (= z3v160 (z3f89 z3v167 z3v168)) (>= (z3f65 z3v160) 0) (= z3v160 z3v159) (>= (z3f65 z3v160) 0) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v168) 0) (>= (z3f65 z3v159) 0) (>= (z3f65 z3v177) 0) (= z3v177 z3v168) (>= (z3f65 z3v177) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v160) 0))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(assert (>= (z3f65 z3v159) 0))
(pop 1)
(declare-fun z3v178 () Int)
(push 1)
(assert true)
(assert (= z3v178 z3v168))
(assert (>= (z3f65 z3v178) 0))
(assert (and (= z3v174 (+ z3v173 z3v172)) (=> (and (>  z3v175 0) (>  z3v167 0)) (and (>= z3v172 z3v175) (>= z3v172 z3v167))) (=> (or (= z3v175 0) (= z3v167 0)) (= z3v172 0)) (=> (and (>  z3v175 1) (>  z3v167 1)) (and (>  z3v172 z3v175) (>  z3v172 z3v167))) (=> (and (>  z3v176 0) (>  z3v99 0)) (and (>= z3v175 z3v176) (>= z3v175 z3v99))) (=> (or (= z3v176 0) (= z3v99 0)) (= z3v175 0)) (=> (and (>  z3v176 1) (>  z3v99 1)) (and (>  z3v175 z3v176) (>  z3v175 z3v99))) (= z3v176 2) (= z3v173 (+ z3v99 z3v167)) (z3f70 z3v165) (z3f70 z3v165) (= z3v165 z3v166) (= (z3f70 z3v165) (<= z3v99 z3v167)) (= (z3f70 z3v166) (<= z3v99 z3v167)) (>= (z3f65 z3v160) 0) (= (z3f86 z3v160) z3v167) (= (z3f87 z3v160) z3v168) (= (z3f65 z3v160) (+ 1 (z3f65 z3v168))) (= (z3f88 z3v160) false) (= z3v160 (z3f89 z3v167 z3v168)) (>= (z3f65 z3v160) 0) (= z3v160 z3v159) (>= (z3f65 z3v160) 0) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v168) 0) (>= (z3f65 z3v159) 0) (>= (z3f65 z3v177) 0) (= z3v177 z3v168) (>= (z3f65 z3v177) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v160) 0))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(assert (>= (z3f65 z3v159) 0))
(push 1)
(assert (not (and (>= (z3f65 z3v178) 0) (<  (z3f65 z3v178) (z3f65 z3v159)))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v179 () Int)
(push 1)
(assert true)
(assert (= z3v179 z3v168))
(assert (>= (z3f65 z3v179) 0))
(assert (and (= z3v174 (+ z3v173 z3v172)) (=> (and (>  z3v175 0) (>  z3v167 0)) (and (>= z3v172 z3v175) (>= z3v172 z3v167))) (=> (or (= z3v175 0) (= z3v167 0)) (= z3v172 0)) (=> (and (>  z3v175 1) (>  z3v167 1)) (and (>  z3v172 z3v175) (>  z3v172 z3v167))) (=> (and (>  z3v176 0) (>  z3v99 0)) (and (>= z3v175 z3v176) (>= z3v175 z3v99))) (=> (or (= z3v176 0) (= z3v99 0)) (= z3v175 0)) (=> (and (>  z3v176 1) (>  z3v99 1)) (and (>  z3v175 z3v176) (>  z3v175 z3v99))) (= z3v176 2) (= z3v173 (+ z3v99 z3v167)) (z3f70 z3v165) (z3f70 z3v165) (= z3v165 z3v166) (= (z3f70 z3v165) (<= z3v99 z3v167)) (= (z3f70 z3v166) (<= z3v99 z3v167)) (>= (z3f65 z3v160) 0) (= (z3f86 z3v160) z3v167) (= (z3f87 z3v160) z3v168) (= (z3f65 z3v160) (+ 1 (z3f65 z3v168))) (= (z3f88 z3v160) false) (= z3v160 (z3f89 z3v167 z3v168)) (>= (z3f65 z3v160) 0) (= z3v160 z3v159) (>= (z3f65 z3v160) 0) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v168) 0) (>= (z3f65 z3v159) 0) (>= (z3f65 z3v177) 0) (= z3v177 z3v168) (>= (z3f65 z3v177) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v160) 0))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(assert (>= (z3f65 z3v159) 0))
(push 1)
(assert (not (>= (z3f65 z3v179) 0)))
(check-sat)
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert (and (>= (z3f65 z3v97) 0) (= z3v98 1) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v101) 0) (= z3v101 z3v97) (>= (z3f65 z3v101) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(pop 1)
(push 1)
(assert true)
(assert (and (>= (z3f65 z3v97) 0) (= z3v98 1) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v101) 0) (= z3v101 z3v97) (>= (z3f65 z3v101) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(pop 1)
(declare-fun z3v180 () Int)
(push 1)
(assert true)
(assert (= z3v180 z3v97))
(assert (>= (z3f65 z3v180) 0))
(assert (and (>= (z3f65 z3v97) 0) (= z3v98 1) (>= (z3f65 z3v96) 0) (= (z3f86 z3v96) z3v99) (= (z3f87 z3v96) z3v100) (= (z3f65 z3v96) (+ 1 (z3f65 z3v100))) (= (z3f88 z3v96) false) (= z3v96 (z3f89 z3v99 z3v100)) (>= (z3f65 z3v96) 0) (= z3v96 z3v95) (>= (z3f65 z3v96) 0) (>= (z3f65 z3v100) 0) (>= (z3f65 z3v95) 0) (= z3v68 z3v67) (>= (z3f65 z3v101) 0) (= z3v101 z3v97) (>= (z3f65 z3v101) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(assert (>= (z3f65 z3v96) 0))
(assert (>= (z3f65 z3v95) 0))
(push 1)
(assert (not (>= (z3f65 z3v180) 0)))
(check-sat)
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert (and (>= (z3f65 z3v64) 0) (= z3v66 1) (= z3v68 z3v67) (>= (z3f65 z3v69) 0) (= z3v69 z3v64) (>= (z3f65 z3v69) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(pop 1)
(push 1)
(assert true)
(assert (and (>= (z3f65 z3v64) 0) (= z3v66 1) (= z3v68 z3v67) (>= (z3f65 z3v69) 0) (= z3v69 z3v64) (>= (z3f65 z3v69) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(pop 1)
(declare-fun z3v181 () Int)
(push 1)
(assert true)
(assert (= z3v181 z3v64))
(assert (>= (z3f65 z3v181) 0))
(assert (and (>= (z3f65 z3v64) 0) (= z3v66 1) (= z3v68 z3v67) (>= (z3f65 z3v69) 0) (= z3v69 z3v64) (>= (z3f65 z3v69) 0) (z3f70 z3v62) (= (z3f72 z3v71) z3v71) (= (z3f72 z3v73) z3v73) (not (z3f70 z3v63)) (= (z3f72 z3v74) z3v74)))
(push 1)
(assert (not (>= (z3f65 z3v181) 0)))
(check-sat)
(pop 1)
(pop 1)
