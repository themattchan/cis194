6:1-6:5::Hw4.fun1 :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
8:5-8:9::_ :: "GHC.Integer.Type.Integer -> GHC.Types.Bool"
8:10-8:11::x :: "{v : GHC.Integer.Type.Integer | v == x}"
8:18-8:19::x :: "{v : GHC.Integer.Type.Integer | v == x}"
8:20-8:21::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 - x2}"
8:25-8:26::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
8:27-8:31::Hw4.fun1 :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
8:32-8:34::xs :: "{v : [GHC.Integer.Type.Integer] | v == xs && len v >= 0}"
9:17-9:21::Hw4.fun1 :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
9:22-9:24::xs :: "{v : [GHC.Integer.Type.Integer] | v == xs && len v >= 0}"
12:1-12:6::Hw4.fun1' :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
12:9-12:16::lq_anf__d1KJ :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
12:17-12:18::_ :: "([GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer)\n-> ([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> [GHC.Integer.Type.Integer]\n-> exists [[GHC.Integer.Type.Integer]].GHC.Integer.Type.Integer"
12:19-12:22::_ :: "(GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> x3:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v == len x3}"
12:24-12:28::_ :: "(GHC.Integer.Type.Integer\n -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> GHC.Integer.Type.Integer\n-> GHC.Integer.Type.Integer\n-> GHC.Integer.Type.Integer"
12:29-12:32::lq_anf__d1KK :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 - v}"
12:36-12:37::_ :: "([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> ([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> [GHC.Integer.Type.Integer]\n-> exists [[GHC.Integer.Type.Integer]].[GHC.Integer.Type.Integer]"
12:38-12:44::_ :: "(GHC.Integer.Type.Integer -> GHC.Types.Bool)\n-> x3:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v <= len x3}"
12:45-12:49::lq_anf__d1KO :: "GHC.Integer.Type.Integer -> GHC.Types.Bool"
15:1-15:5::Hw4.fun2 :: "GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer"
16:10-16:14::_ :: "GHC.Integer.Type.Integer -> GHC.Types.Bool"
16:15-16:16::ds_d1IP :: "GHC.Integer.Type.Integer"
16:19-16:20::ds_d1IP :: "GHC.Integer.Type.Integer"
16:21-16:22::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + x2}"
16:23-16:27::Hw4.fun2 :: "GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer"
16:29-16:30::ds_d1IP :: "GHC.Integer.Type.Integer"
16:31-16:36::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:{v : GHC.Integer.Type.Integer | v /= 0}\n-> {v : GHC.Integer.Type.Integer | x1 >= 0 && x2 >= 0 => v >= 0 && x1 >= 0 && x2 >= 1 => v <= x1 && v == x1 / x2}"
17:22-17:26::Hw4.fun2 :: "GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer"
17:28-17:33::lq_anf__d1KD :: "GHC.Integer.Type.Integer"
17:30-17:31::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
17:32-17:33::ds_d1IP :: "GHC.Integer.Type.Integer"
17:34-17:35::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + x2}"
20:1-20:6::Hw4.fun2' :: "GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer"
20:9-20:12::lq_anf__d1Ko :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
20:13-20:14::_ :: "([GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer)\n-> (GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer])\n-> GHC.Integer.Type.Integer\n-> exists [[GHC.Integer.Type.Integer]].GHC.Integer.Type.Integer"
20:15-20:21::_ :: "(GHC.Integer.Type.Integer -> GHC.Types.Bool)\n-> x3:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v <= len x3}"
20:22-20:26::lq_anf__d1Kp :: "GHC.Integer.Type.Integer -> GHC.Types.Bool"
20:27-20:28::_ :: "([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> (GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer])\n-> GHC.Integer.Type.Integer\n-> exists [[GHC.Integer.Type.Integer]].[GHC.Integer.Type.Integer]"
20:29-20:38::_ :: "(GHC.Integer.Type.Integer -> GHC.Types.Bool)\n-> x3:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v <= len x3}"
20:40-20:42::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Types.Bool | Prop v <=> x1 /= v}"
20:46-20:47::_ :: "([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> (GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer])\n-> GHC.Integer.Type.Integer\n-> exists [[GHC.Integer.Type.Integer]].[GHC.Integer.Type.Integer]"
20:48-20:55::_ :: "(GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]"
20:56-20:57::lq_anf__d1Kt :: "GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer"
21:9-21:10::f :: "forall a. (GHC.Real.Integral [Bivariant]\n[] a) => a -> a"
21:11-21:12::x :: "a"
21:15-21:52::lq_anf__d1Km :: "{v : GHC.Integer.Type.Integer | v == 2}"
21:18-21:22::_ :: "a -> GHC.Types.Bool"
21:23-21:24::x :: "{VV : a | VV == x}"
21:30-21:31::x :: "{VV : a | VV == x}"
21:32-21:37::_ :: "x1:a\n-> x2:{VV : a | VV /= 0}\n-> {VV : a | x1 >= 0 && x2 >= 0 => VV >= 0 && x1 >= 0 && x2 >= 1 => VV <= x1 && VV == x1 / x2}"
21:38-21:39::lq_anf__d1Kn :: "a"
21:45-21:46::lq_anf__d1Ki :: "a"
21:46-21:47::_ :: "x1:a\n-> x2:a\n-> {VV : a | x1 > 0 && x2 > 0 => VV >= x1 && VV >= x2 && x1 > 1 && x2 > 1 => VV > x1 && VV > x2 && x1 == 0 || x2 == 0 => VV == 0}"
21:47-21:48::x :: "{VV : a | VV == x}"
21:49-21:50::_ :: "x1:a -> x2:a -> {VV : a | VV == x1 + x2}"
21:51-21:52::lq_anf__d1Kl :: "a"
27:23-27:27::Hw4.$fShowTree :: "forall a.\n(GHC.Show.Show [Contravariant]\n[] a) =>\n(GHC.Show.Show (Hw4.Tree a))"
27:29-27:31::Hw4.$fEqTree :: "forall a.\n(GHC.Classes.Eq [Contravariant]\n[] a) =>\n(GHC.Classes.Eq (Hw4.Tree a))"
30:1-30:8::Hw4.insElem :: "forall a. a -> (Hw4.Tree a) -> (Hw4.Tree a)"
30:9-30:10::e :: "a"
30:18-30:22::_ :: "GHC.Integer.Type.Integer\n-> (Hw4.Tree a) -> a -> (Hw4.Tree a) -> (Hw4.Tree a)"
30:25-30:29::lq_anf__d1Jb :: "(Hw4.Tree a)"
30:30-30:31::e :: "{VV : a | VV == e}"
30:32-30:36::lq_anf__d1Jc :: "(Hw4.Tree a)"
32:5-32:11::_ :: "(Hw4.Tree a) -> GHC.Integer.Type.Integer"
32:12-32:13::l :: "{v : (Hw4.Tree a) | v == l}"
32:14-32:15::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Types.Bool | Prop v <=> x1 < v}"
32:16-32:22::_ :: "(Hw4.Tree a) -> GHC.Integer.Type.Integer"
32:23-32:24::r :: "{v : (Hw4.Tree a) | v == r}"
33:11-33:13::l' :: "(Hw4.Tree a)"
33:17-33:24::Hw4.insElem :: "forall a. a -> (Hw4.Tree a) -> (Hw4.Tree a)"
33:25-33:26::e :: "{VV : a | VV == e}"
33:27-33:28::l :: "{v : (Hw4.Tree a) | v == l}"
34:7-34:11::_ :: "GHC.Integer.Type.Integer\n-> (Hw4.Tree a) -> a -> (Hw4.Tree a) -> (Hw4.Tree a)"
34:13-34:19::_ :: "(Hw4.Tree a) -> GHC.Integer.Type.Integer"
34:20-34:22::l' :: "{v : (Hw4.Tree a) | v == l'}"
34:24-34:26::l' :: "{v : (Hw4.Tree a) | v == l'}"
34:27-34:29::e' :: "{VV : a | VV == e'}"
34:30-34:31::r :: "{v : (Hw4.Tree a) | v == r}"
35:5-35:11::_ :: "(Hw4.Tree a) -> GHC.Integer.Type.Integer"
35:12-35:13::r :: "{v : (Hw4.Tree a) | v == r}"
35:14-35:15::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Types.Bool | Prop v <=> x1 < v}"
35:16-35:22::_ :: "(Hw4.Tree a) -> GHC.Integer.Type.Integer"
35:23-35:24::l :: "{v : (Hw4.Tree a) | v == l}"
36:11-36:13::r' :: "(Hw4.Tree a)"
36:17-36:24::Hw4.insElem :: "forall a. a -> (Hw4.Tree a) -> (Hw4.Tree a)"
36:25-36:26::e :: "{VV : a | VV == e}"
36:27-36:28::r :: "{v : (Hw4.Tree a) | v == r}"
37:7-37:11::_ :: "GHC.Integer.Type.Integer\n-> (Hw4.Tree a) -> a -> (Hw4.Tree a) -> (Hw4.Tree a)"
37:13-37:19::_ :: "(Hw4.Tree a) -> GHC.Integer.Type.Integer"
37:20-37:22::r' :: "{v : (Hw4.Tree a) | v == r'}"
37:24-37:25::l :: "{v : (Hw4.Tree a) | v == l}"
37:26-37:28::e' :: "{VV : a | VV == e'}"
37:29-37:31::r' :: "{v : (Hw4.Tree a) | v == r'}"
39:5-39:11::height :: "forall a. (Hw4.Tree a) -> GHC.Integer.Type.Integer"
39:29-39:31::lq_anf__d1Je :: "{v : GHC.Integer.Type.Integer | v == 1}"
40:29-40:30::h :: "{v : GHC.Integer.Type.Integer | v == h}"
43:1-43:9::Hw4.foldTree :: "forall a. [a] -> (Hw4.Tree a)"
43:12-43:17::_ :: "(a -> (Hw4.Tree a) -> (Hw4.Tree a))\n-> (Hw4.Tree a) -> [a] -> (Hw4.Tree a)"
43:18-43:25::lq_anf__d1Jp :: "a -> (Hw4.Tree a) -> (Hw4.Tree a)"
43:26-43:30::lq_anf__d1Jq :: "(Hw4.Tree a)"
48:1-48:4::Hw4.xor :: "[GHC.Types.Bool] -> GHC.Types.Bool"
48:7-48:10::lq_anf__d1JR :: "GHC.Types.Int -> GHC.Types.Bool"
48:11-48:12::_ :: "(GHC.Types.Int -> GHC.Types.Bool)\n-> ([GHC.Types.Bool] -> GHC.Types.Int)\n-> [GHC.Types.Bool]\n-> exists [GHC.Types.Int].GHC.Types.Bool"
48:13-48:19::lq_anf__d1JS :: "x1:[GHC.Types.Bool] -> {v : GHC.Types.Int | v == len x1}"
48:20-48:21::_ :: "([GHC.Types.Bool] -> GHC.Types.Int)\n-> ([GHC.Types.Bool] -> [GHC.Types.Bool])\n-> [GHC.Types.Bool]\n-> exists [[GHC.Types.Bool]].GHC.Types.Int"
48:22-48:27::_ :: "(GHC.Types.Bool -> [GHC.Types.Bool] -> [GHC.Types.Bool])\n-> [GHC.Types.Bool] -> [GHC.Types.Bool] -> [GHC.Types.Bool]"
48:29-48:57::lq_anf__d1JU :: "GHC.Types.Bool -> [GHC.Types.Bool] -> [GHC.Types.Bool]"
48:30-48:31::x :: "GHC.Types.Bool"
48:32-48:33::a :: "[GHC.Types.Bool]"
48:40-48:41::_ :: "{v : GHC.Types.Bool | v == x}"
48:47-48:48::x :: "{v : GHC.Types.Bool | v == x}"
48:48-48:49::_ :: "x1:GHC.Types.Bool\n-> x2:[GHC.Types.Bool]\n-> {v : [GHC.Types.Bool] | null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"
48:49-48:50::a :: "{v : [GHC.Types.Bool] | v == a && len v >= 0}"
48:56-48:57::a :: "{v : [GHC.Types.Bool] | v == a && len v >= 0}"
48:59-48:61::lq_anf__d1JV :: "{v : [GHC.Types.Bool] | null v <=> true && len v == 0 && len v >= 0}"
51:1-51:5::Hw4.map' :: "forall a b. (a -> b) -> [a] -> [b]"
51:6-51:7::f :: "a -> b"
51:10-51:15::_ :: "(a -> [b] -> [b]) -> [b] -> [a] -> [b]"
51:17-51:20::lq_anf__d1J6 :: "x1:a\n-> x2:[a]\n-> {v : [a] | null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"
51:21-51:22::_ :: "(a -> [a] -> [a]) -> (b -> a) -> b -> exists [a].[a] -> [a]"
51:23-51:24::f :: "a -> b"
51:26-51:28::lq_anf__d1J8 :: "{v : [a] | null v <=> true && len v == 0 && len v >= 0}"
54:1-54:8::Hw4.myFoldl :: "forall a b. (a -> b -> a) -> a -> [b] -> a"
54:9-54:10::f :: "a -> b -> a"
54:11-54:12::b :: "a"
54:13-54:15::xs :: "[a]"
54:18-54:23::_ :: "(a -> (b -> b) -> b -> b) -> (b -> b) -> [a] -> b -> b"
54:25-54:44::lq_anf__d1J4 :: "a -> (b -> b) -> b -> b"
54:26-54:27::x :: "a"
54:28-54:29::a :: "a -> a"
54:30-54:31::b :: "a"
54:35-54:36::_ :: "a -> a"
54:38-54:39::_ :: "a -> b -> a"
54:40-54:41::b :: "{VV : a | VV == b}"
54:42-54:43::x :: "{VV : a | VV == x}"
54:46-54:48::lq_anf__d1J5 :: "x1:a -> {VV : a | VV == x1}"
54:49-54:51::xs :: "{v : [a] | v == xs && len v >= 0}"
54:52-54:53::b :: "{VV : a | VV == b}"
59:1-59:14::Hw4.sieveSundaram :: "GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]"
59:15-59:16::n :: "GHC.Integer.Type.Integer"
59:19-59:22::_ :: "(GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> x3:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v == len x3}"
59:25-59:36::lq_anf__d1Lf :: "GHC.Integer.Type.Integer\n-> exists [GHC.Integer.Type.Integer].GHC.Integer.Type.Integer"
59:26-59:27::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + x2}"
59:30-59:31::_ :: "(GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> (GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> GHC.Integer.Type.Integer\n-> exists [GHC.Integer.Type.Integer].GHC.Integer.Type.Integer"
59:33-59:34::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
59:38-59:39::_ :: "([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> [GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]"
59:40-59:46::lq_anf__d1Li :: "{v : [GHC.Integer.Type.Integer] | len v >= 0}"
59:44-59:45::n :: "{v : GHC.Integer.Type.Integer | v == n}"
59:47-59:49::_ :: "[GHC.Integer.Type.Integer]\n-> [GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]"
59:50-59:52::rm :: "{v : [GHC.Integer.Type.Integer] | v == rm && len v >= 0}"
60:9-60:11::rm :: "[GHC.Integer.Type.Integer]"
60:14-60:20::_ :: "(GHC.Integer.Type.Integer -> GHC.Types.Bool)\n-> x3:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v <= len x3}"
60:22-60:24::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Types.Bool | Prop v <=> x1 <= v}"
60:25-60:26::_ :: "{v : GHC.Integer.Type.Integer | v == n}"
60:28-60:74::lq_anf__d1Lc :: "{v : [GHC.Integer.Type.Integer] | len v >= 0}"
60:29-60:30::ds_d1Iy :: "GHC.Integer.Type.Integer"
60:31-60:32::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + x2}"
60:33-60:34::ds_d1IC :: "GHC.Integer.Type.Integer"
60:35-60:36::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + x2}"
60:37-60:40::lq_anf__d1L4 :: "GHC.Integer.Type.Integer"
60:38-60:39::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
60:39-60:40::ds_d1Iy :: "GHC.Integer.Type.Integer"
60:40-60:41::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
60:41-60:42::ds_d1IC :: "GHC.Integer.Type.Integer"
60:48-60:54::lq_anf__d1Lb :: "{v : [GHC.Integer.Type.Integer] | len v >= 0}"
60:52-60:53::n :: "{v : GHC.Integer.Type.Integer | v == n}"
60:59-60:65::lq_anf__d1L9 :: "{v : [GHC.Integer.Type.Integer] | len v >= 0}"
60:63-60:64::n :: "{v : GHC.Integer.Type.Integer | v == n}"
60:67-60:68::ds_d1Iy :: "GHC.Integer.Type.Integer"
60:69-60:71::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Types.Bool | Prop v <=> x1 <= v}"
60:72-60:73::ds_d1IC :: "GHC.Integer.Type.Integer"