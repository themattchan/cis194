34:3-34:8::Main.gt100 :: "GHC.Integer.Type.Integer -> GHC.Types.Bool"
34:9-34:10::x :: "GHC.Integer.Type.Integer"
34:13-34:14::x :: "{v : GHC.Integer.Type.Integer | v == x}"
34:15-34:16::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Types.Bool | Prop v <=> x1 > v}"
37:3-37:17::Main.greaterThan100 :: "[GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]"
37:18-37:20::xs :: "[GHC.Integer.Type.Integer]"
37:23-37:29::_ :: "(GHC.Integer.Type.Integer -> GHC.Types.Bool)\n-> x3:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v <= len x3}"
37:30-37:35::Main.gt100 :: "GHC.Integer.Type.Integer -> GHC.Types.Bool"
37:36-37:38::xs :: "{v : [GHC.Integer.Type.Integer] | v == xs && len v >= 0}"
44:3-44:19::Main.greaterThan100_2 :: "[GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]"
44:20-44:22::xs :: "[GHC.Integer.Type.Integer]"
44:25-44:31::_ :: "(GHC.Integer.Type.Integer -> GHC.Types.Bool)\n-> x3:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v <= len x3}"
44:33-44:46::lq_anf__d1gi :: "GHC.Integer.Type.Integer -> GHC.Types.Bool"
44:34-44:35::x :: "GHC.Integer.Type.Integer"
44:39-44:40::x :: "{v : GHC.Integer.Type.Integer | v == x}"
44:41-44:42::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Types.Bool | Prop v <=> x1 > v}"
44:48-44:50::xs :: "{v : [GHC.Integer.Type.Integer] | v == xs && len v >= 0}"
59:3-59:19::Main.greaterThan100_3 :: "[GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]"
59:20-59:22::xs :: "[GHC.Integer.Type.Integer]"
59:25-59:31::_ :: "(GHC.Integer.Type.Integer -> GHC.Types.Bool)\n-> x3:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v <= len x3}"
59:33-59:34::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Types.Bool | Prop v <=> x1 > v}"
59:39-59:41::xs :: "{v : [GHC.Integer.Type.Integer] | v == xs && len v >= 0}"
105:3-105:6::Main.foo :: "forall a b c. (a -> b) -> (c -> a) -> c -> b"
105:7-105:8::f :: "a -> b"
105:9-105:10::g :: "a -> b"
105:14-105:15::x :: "a"
105:19-105:20::_ :: "a -> b"
105:22-105:23::_ :: "a -> b"
105:24-105:25::x :: "{VV : a | VV == x}"
124:3-124:9::Main.myTest :: "[GHC.Integer.Type.Integer] -> GHC.Types.Bool"
124:10-124:12::xs :: "[GHC.Integer.Type.Integer]"
124:15-124:19::_ :: "GHC.Types.Int -> GHC.Types.Bool"
124:21-124:27::_ :: "x1:[GHC.Integer.Type.Integer] -> {v : GHC.Types.Int | v == len x1}"
124:29-124:43::_ :: "[GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]"
124:44-124:46::xs :: "{v : [GHC.Integer.Type.Integer] | v == xs && len v >= 0}"
129:3-129:10::Main.myTest' :: "[GHC.Integer.Type.Integer] -> GHC.Types.Bool"
129:13-129:17::lq_anf__d1gm :: "GHC.Types.Int -> GHC.Types.Bool"
129:18-129:19::_ :: "(GHC.Types.Int -> GHC.Types.Bool)\n-> ([GHC.Integer.Type.Integer] -> GHC.Types.Int)\n-> [GHC.Integer.Type.Integer]\n-> exists [GHC.Types.Int].GHC.Types.Bool"
129:20-129:26::lq_anf__d1gn :: "x1:[GHC.Integer.Type.Integer] -> {v : GHC.Types.Int | v == len x1}"
129:27-129:28::_ :: "([GHC.Integer.Type.Integer] -> GHC.Types.Int)\n-> ([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> [GHC.Integer.Type.Integer]\n-> exists [[GHC.Integer.Type.Integer]].GHC.Types.Int"
129:29-129:43::Main.greaterThan100 :: "[GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]"
157:3-157:4::Main.f :: "GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int"
157:5-157:6::x :: "GHC.Types.Int"
157:7-157:8::y :: "GHC.Types.Int"
157:11-157:12::lq_anf__d1g8 :: "{v : GHC.Types.Int | v == (2  :  int)}"
157:12-157:13::_ :: "x1:GHC.Types.Int\n-> x2:GHC.Types.Int\n-> {v : GHC.Types.Int | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
157:13-157:14::x :: "{v : GHC.Types.Int | v == x}"
157:15-157:16::_ :: "x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"
157:17-157:18::y :: "{v : GHC.Types.Int | v == y}"
168:3-168:5::Main.f' :: "GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int"
168:6-168:7::x :: "GHC.Types.Int"
168:8-168:9::y :: "GHC.Types.Int"
168:12-168:13::lq_anf__d1g6 :: "{v : GHC.Types.Int | v == (2  :  int)}"
168:13-168:14::_ :: "x1:GHC.Types.Int\n-> x2:GHC.Types.Int\n-> {v : GHC.Types.Int | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
168:14-168:15::x :: "{v : GHC.Types.Int | v == x}"
168:16-168:17::_ :: "x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"
168:18-168:19::y :: "{v : GHC.Types.Int | v == y}"
214:3-214:7::Main.comp :: "forall a b c. (a -> b) -> (c -> a) -> c -> b"
214:8-214:9::f :: "a -> b"
214:10-214:11::g :: "a -> b"
214:12-214:13::x :: "a"
214:16-214:17::_ :: "a -> b"
214:19-214:20::_ :: "a -> b"
214:21-214:22::x :: "{VV : a | VV == x}"
232:3-232:6::Main.f'' :: "(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int"
232:15-232:16::lq_anf__d1gb :: "{v : GHC.Types.Int | v == (2  :  int)}"
232:16-232:17::_ :: "x1:GHC.Types.Int\n-> x2:GHC.Types.Int\n-> {v : GHC.Types.Int | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
232:17-232:18::x :: "{v : GHC.Types.Int | v == x}"
232:19-232:20::_ :: "x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"
232:21-232:22::y :: "{v : GHC.Types.Int | v == y}"
241:3-241:14::Main.schönfinkel :: "forall a b c. ((a, b) -> c) -> a -> b -> c"
241:15-241:16::f :: "(a, b) -> c"
241:17-241:18::x :: "a"
241:19-241:20::y :: "a"
241:23-241:24::_ :: "(a, b) -> c"
241:25-241:30::lq_anf__d1g3 :: "{v : (a, b) | fst v == x && x_Tuple22 v == y && snd v == y && x_Tuple21 v == x}"
241:26-241:27::x :: "{VV : a | VV == x}"
241:28-241:29::y :: "{VV : a | VV == y}"
244:3-244:16::Main.unschönfinkel :: "forall a b c. (a -> b -> c) -> (a, b) -> c"
244:17-244:18::f :: "a -> b -> c"
244:27-244:28::_ :: "a -> b -> c"
244:29-244:30::x :: "{VV : a | VV == x}"
244:31-244:32::y :: "{VV : a | VV == y}"
281:3-281:9::Main.foobar :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
283:7-283:8::x :: "{v : GHC.Integer.Type.Integer | v == x}"
283:9-283:10::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Types.Bool | Prop v <=> x1 > v}"
283:20-283:23::lq_anf__d1gF :: "GHC.Integer.Type.Integer"
283:21-283:22::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
283:22-283:23::x :: "{v : GHC.Integer.Type.Integer | v == x}"
283:24-283:25::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + x2}"
283:29-283:30::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + x2}"
283:31-283:37::Main.foobar :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
283:38-283:40::xs :: "{v : [GHC.Integer.Type.Integer] | v == xs && len v >= 0}"
284:19-284:25::Main.foobar :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
284:26-284:28::xs :: "{v : [GHC.Integer.Type.Integer] | v == xs && len v >= 0}"
298:3-298:10::Main.foobar' :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
298:13-298:16::lq_anf__d1gr :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
298:17-298:18::_ :: "([GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer)\n-> ([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> [GHC.Integer.Type.Integer]\n-> exists [[GHC.Integer.Type.Integer]].GHC.Integer.Type.Integer"
298:19-298:22::_ :: "(GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> x3:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v == len x3}"
298:24-298:37::lq_anf__d1gv :: "GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer"
298:25-298:26::x :: "GHC.Integer.Type.Integer"
298:30-298:33::lq_anf__d1gt :: "GHC.Integer.Type.Integer"
298:31-298:32::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
298:32-298:33::x :: "{v : GHC.Integer.Type.Integer | v == x}"
298:34-298:35::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + x2}"
298:39-298:40::_ :: "([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> ([GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer])\n-> [GHC.Integer.Type.Integer]\n-> exists [[GHC.Integer.Type.Integer]].[GHC.Integer.Type.Integer]"
298:41-298:47::_ :: "(GHC.Integer.Type.Integer -> GHC.Types.Bool)\n-> x3:[GHC.Integer.Type.Integer]\n-> {v : [GHC.Integer.Type.Integer] | len v <= len x3}"
298:49-298:50::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Types.Bool | Prop v <=> x1 > v}"
340:3-340:7::Main.sum' :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
341:17-341:18::x :: "{v : GHC.Integer.Type.Integer | v == x}"
341:19-341:20::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + x2}"
341:21-341:25::Main.sum' :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
341:26-341:28::xs :: "{v : [GHC.Integer.Type.Integer] | v == xs && len v >= 0}"
344:3-344:11::Main.product' :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
345:21-345:22::x :: "{v : GHC.Integer.Type.Integer | v == x}"
345:23-345:24::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
345:25-345:33::Main.product' :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
345:34-345:36::xs :: "{v : [GHC.Integer.Type.Integer] | v == xs && len v >= 0}"
348:3-348:10::Main.length' :: "forall a. [a] -> GHC.Types.Int"
348:20-348:21::GHC.Types.I# :: "x1:GHC.Prim.Int# -> {v : GHC.Types.Int | v == (x1  :  int)}"
349:20-349:21::lq_anf__d1ge :: "{v : GHC.Types.Int | v == (1  :  int)}"
349:22-349:23::_ :: "x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"
349:24-349:31::Main.length' :: "forall a. [a] -> GHC.Types.Int"
349:32-349:34::xs :: "{v : [a] | v == xs && len v >= 0}"
356:3-356:7::Main.fold :: "forall a b. a -> (b -> a -> a) -> [b] -> a"
356:8-356:9::z :: "a"
356:10-356:11::f :: "a -> b -> b"
356:21-356:22::z :: "{VV : a | VV == z}"
357:21-357:22::_ :: "a -> b -> b"
357:23-357:24::x :: "{VV : a | VV == x}"
357:26-357:30::Main.fold :: "forall a b. a -> (b -> a -> a) -> [b] -> a"
357:31-357:32::z :: "{VV : a | VV == z}"
357:33-357:34::f :: "a -> b -> b"
357:35-357:37::xs :: "{v : [a] | v == xs && len v >= 0}"
369:3-369:8::Main.sum'' :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
369:15-369:19::_ :: "GHC.Integer.Type.Integer\n-> (GHC.Integer.Type.Integer\n    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> [GHC.Integer.Type.Integer]\n-> GHC.Integer.Type.Integer"
369:22-369:25::lq_anf__d1gR :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + v}"
370:3-370:12::Main.product'' :: "[GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer"
370:15-370:19::_ :: "GHC.Integer.Type.Integer\n-> (GHC.Integer.Type.Integer\n    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> [GHC.Integer.Type.Integer]\n-> GHC.Integer.Type.Integer"
370:22-370:25::lq_anf__d1gM :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
371:3-371:11::Main.length'' :: "forall a. [a] -> GHC.Integer.Type.Integer"
371:15-371:19::_ :: "GHC.Integer.Type.Integer\n-> (a -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer)\n-> [a]\n-> GHC.Integer.Type.Integer"
371:23-371:36::lq_anf__d1gP :: "a -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer"
371:26-371:27::s :: "GHC.Integer.Type.Integer"
371:31-371:36::lq_anf__d1gO :: "{v : GHC.Integer.Type.Integer | v == 1}"
371:33-371:34::_ :: "x1:GHC.Integer.Type.Integer\n-> x2:GHC.Integer.Type.Integer\n-> {v : GHC.Integer.Type.Integer | v == x1 + x2}"
371:35-371:36::s :: "{v : GHC.Integer.Type.Integer | v == s}"