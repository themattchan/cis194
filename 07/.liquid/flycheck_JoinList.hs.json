{"status":"unsafe","types":{"84":{"43":{"ann":"(Buffer.Buffer (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char]))","ident":"JoinList.$fBufferJoinList","row":84,"col":43},"29":{"ann":"(Buffer.Buffer (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char]))","ident":"JoinList.$fBufferJoinList","row":84,"col":29},"40":{"ann":"x1:[GHC.Types.Char]\n-> x2:[GHC.Types.Char]\n-> {v : [GHC.Types.Char] | len v == len x1 + len v}","ident":"_","row":84,"col":40},"52":{"ann":"{v : (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char]) | v == r}","ident":"r","row":84,"col":52},"38":{"ann":"{v : (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char]) | v == l}","ident":"l","row":84,"col":38}},"51":{"7":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 < v}","ident":"_","row":51,"col":7},"13":{"ann":"{v : (JoinList.JoinList a b) | v == x}","ident":"x","row":51,"col":13},"36":{"ann":"{v : (JoinList.JoinList a b) | v == x}","ident":"x","row":51,"col":36},"34":{"ann":"GHC.Types.Int","ident":"ds_d6TT","row":51,"col":34},"5":{"ann":"GHC.Types.Int","ident":"ds_d6TT","row":51,"col":5},"27":{"ann":"forall a b.\n(Sized.Sized [Contravariant]\n[] a, Data.Monoid.Monoid [Bivariant]\n[] a) =>\nGHC.Types.Int -> (JoinList.JoinList a b) -> (Data.Maybe.Maybe b)","ident":"JoinList.indexJ","row":51,"col":27},"9":{"ann":"(JoinList.JoinList a b) -> GHC.Types.Int","ident":"_","row":51,"col":9}},"37":{"22":{"ann":"{VV : a | VV == t}","ident":"t","row":37,"col":22}},"25":{"29":{"ann":"forall a b.\n(GHC.Classes.Eq [Contravariant]\n[] a, GHC.Classes.Eq [Contravariant]\n[] b) =>\n(GHC.Classes.Eq (JoinList.JoinList a b))","ident":"JoinList.$fEqJoinList","row":25,"col":29},"33":{"ann":"forall a b.\n(GHC.Show.Show [Contravariant]\n[] a, GHC.Show.Show [Contravariant]\n[] b) =>\n(GHC.Show.Show (JoinList.JoinList a b))","ident":"JoinList.$fShowJoinList","row":25,"col":33}},"82":{"29":{"ann":"forall a <p :: a a -> Prop>.\n{v : [a]<\\x4 VV -> p x4> | null v <=> true && len v == 0}","ident":"GHC.Types.[]","row":82,"col":29},"3":{"ann":"(JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> [GHC.Types.Char]","ident":"$ctoString","row":82,"col":3}},"75":{"15":{"ann":"Scrabble.Score\n-> [GHC.Types.Char]\n-> (JoinList.JoinList Scrabble.Score [GHC.Types.Char])","ident":"_","row":75,"col":15},"35":{"ann":"{v : [GHC.Types.Char] | v == l && len v >= 0}","ident":"l","row":75,"col":35},"1":{"ann":"[GHC.Types.Char]\n-> (JoinList.JoinList Scrabble.Score [GHC.Types.Char])","ident":"JoinList.scoreLine","row":75,"col":1},"23":{"ann":"[GHC.Types.Char] -> Scrabble.Score","ident":"_","row":75,"col":23},"11":{"ann":"[GHC.Types.Char]","ident":"l","row":75,"col":11},"38":{"ann":"{v : [GHC.Types.Char] | v == l && len v >= 0}","ident":"l","row":75,"col":38}},"31":{"13":{"ann":"(JoinList.JoinList a b)","ident":"y","row":31,"col":13},"17":{"ann":"{v : (JoinList.JoinList a b) | v == y}","ident":"y","row":31,"col":17},"1":{"ann":"forall a b.\n(Data.Monoid.Monoid [Bivariant]\n[] a) =>\n(JoinList.JoinList a b)\n-> (JoinList.JoinList a b) -> (JoinList.JoinList a b)","ident":"JoinList.+++","row":31,"col":1}},"14":{"57":{"ann":"{v : GHC.Types.Int | v == n}","ident":"_","row":14,"col":57},"13":{"ann":"GHC.Types.Int","ident":"n","row":14,"col":13},"17":{"ann":"Test.QuickCheck.Test.Args -> a -> (GHC.Types.IO ())","ident":"lq_anf__d6UX","row":14,"col":17},"1":{"ann":"forall a.\n(Test.QuickCheck.Property.Testable [Contravariant]\n[] a) =>\nGHC.Types.Int -> a -> (GHC.Types.IO ())","ident":"JoinList.quickCheckN","row":14,"col":1},"34":{"ann":"{v : Test.QuickCheck.Test.Args | v == Test.QuickCheck.Test.stdArgs}","ident":"_","row":14,"col":34},"32":{"ann":"(Test.QuickCheck.Test.Args -> a -> (GHC.Types.IO ()))\n-> Test.QuickCheck.Test.Args -> a -> (GHC.Types.IO ())","ident":"_","row":14,"col":32}},"36":{"22":{"ann":"{v : (Data.Monoid.Monoid a) | v == $dMonoid_a6OL}","ident":"$dMonoid_a6OL","row":36,"col":22},"1":{"ann":"forall a b.\n(Data.Monoid.Monoid [Bivariant]\n[] a) =>\n(JoinList.JoinList a b) -> a","ident":"JoinList.tag","row":36,"col":1}},"49":{"1":{"ann":"forall a b.\n(Sized.Sized [Contravariant]\n[] a, Data.Monoid.Monoid [Bivariant]\n[] a) =>\nGHC.Types.Int -> (JoinList.JoinList a b) -> (Data.Maybe.Maybe b)","ident":"JoinList.indexJ","row":49,"col":1},"27":{"ann":"x1:a\n-> {v : (Data.Maybe.Maybe a) | isJust v <=> true && fromJust v == x1}","ident":"_","row":49,"col":27},"32":{"ann":"{VV : a | VV == e}","ident":"e","row":49,"col":32}},"19":{"13":{"ann":"{v : GHC.Types.Int | v == (1  :  int)}","ident":"_","row":19,"col":13},"3":{"ann":"{v : GHC.Types.Int | v == (1  :  int)}","ident":"$cmempty","row":19,"col":3}},"66":{"19":{"ann":"(JoinList.JoinList a b)\n-> (JoinList.JoinList a b) -> (JoinList.JoinList a b)","ident":"_","row":66,"col":19},"30":{"ann":"{v : GHC.Types.Int | v == i}","ident":"i","row":66,"col":30},"17":{"ann":"{v : (JoinList.JoinList a b) | v == x}","ident":"x","row":66,"col":17},"23":{"ann":"forall a b.\n(Sized.Sized [Contravariant]\n[] a, Data.Monoid.Monoid [Bivariant]\n[] a) =>\nGHC.Types.Int -> (JoinList.JoinList a b) -> (JoinList.JoinList a b)","ident":"JoinList.takeJ","row":66,"col":23},"34":{"ann":"(JoinList.JoinList a b) -> GHC.Types.Int","ident":"_","row":66,"col":34},"41":{"ann":"{v : (JoinList.JoinList a b) | v == y}","ident":"y","row":66,"col":41},"38":{"ann":"{v : (JoinList.JoinList a b) | v == x}","ident":"x","row":66,"col":38},"32":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}","ident":"_","row":66,"col":32}},"88":{"25":{"ann":"(Scrabble.Score, Sized.Size)","ident":"lq_anf__d6W6","row":88,"col":25},"14":{"ann":"[GHC.Types.Char]","ident":"s","row":88,"col":14},"49":{"ann":"{v : [GHC.Types.Char] | v == s && len v >= 0}","ident":"s","row":88,"col":49},"18":{"ann":"(Scrabble.Score, Sized.Size)\n-> [GHC.Types.Char]\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])","ident":"_","row":88,"col":18},"26":{"ann":"[GHC.Types.Char] -> Scrabble.Score","ident":"_","row":88,"col":26},"46":{"ann":"{v : GHC.Types.Int | v == (1  :  int)}","ident":"lq_anf__d6W4","row":88,"col":46},"41":{"ann":"GHC.Types.Int -> Sized.Size","ident":"_","row":88,"col":41},"38":{"ann":"{v : [GHC.Types.Char] | v == s && len v >= 0}","ident":"s","row":88,"col":38},"3":{"ann":"[GHC.Types.Char]\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])","ident":"$cfromString","row":88,"col":3}},"83":{"29":{"ann":"{v : [GHC.Types.Char] | v == s && len v >= 0}","ident":"s","row":83,"col":29}},"113":{"25":{"ann":"{v : (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char]) | v == buffer}","ident":"buffer","row":113,"col":25},"1":{"ann":"(GHC.Types.IO ())","ident":"JoinList.main","row":113,"col":1},"18":{"ann":"(Editor.Editor (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char]) ())","ident":"lq_anf__d6Xa","row":113,"col":18},"8":{"ann":"(Buffer.Buffer (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char]))","ident":"JoinList.$fBufferJoinList","row":113,"col":8}},"56":{"15":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 <= v}","ident":"_","row":56,"col":15},"7":{"ann":"GHC.Types.Int","ident":"i","row":56,"col":7},"13":{"ann":"{v : GHC.Types.Int | v == i}","ident":"i","row":56,"col":13},"22":{"ann":"{v : (JoinList.JoinList a b) | v == l}","ident":"l","row":56,"col":22},"1":{"ann":"forall a b.\n(Sized.Sized [Contravariant]\n[] a, Data.Monoid.Monoid [Bivariant]\n[] a) =>\nGHC.Types.Int -> (JoinList.JoinList a b) -> (JoinList.JoinList a b)","ident":"JoinList.dropJ","row":56,"col":1},"18":{"ann":"{v : GHC.Types.Int | v == (0  :  int)}","ident":"lq_anf__d6Vw","row":56,"col":18},"9":{"ann":"(JoinList.JoinList a b)","ident":"l","row":56,"col":9}},"53":{"27":{"ann":"{v : (Data.Maybe.Maybe a) | isJust v <=> false}","ident":"_","row":53,"col":27}},"45":{"13":{"ann":"Sized.Size -> GHC.Types.Int","ident":"_","row":45,"col":13},"1":{"ann":"forall a b.\n(Sized.Sized [Contravariant]\n[] a, Data.Monoid.Monoid [Bivariant]\n[] a) =>\n(JoinList.JoinList a b) -> GHC.Types.Int","ident":"JoinList.len","row":45,"col":1},"21":{"ann":"Sized.Size","ident":"lq_anf__d6V4","row":45,"col":21}},"67":{"13":{"ann":"{v : (JoinList.JoinList a b) | v == l}","ident":"_","row":67,"col":13}},"18":{"10":{"ann":"(Data.Monoid.Monoid GHC.Types.Int)","ident":"JoinList.$fMonoidInt","row":18,"col":10}},"59":{"28":{"ann":"(JoinList.JoinList a b) -> GHC.Types.Int","ident":"_","row":59,"col":28},"17":{"ann":"forall a b.\n(Sized.Sized [Contravariant]\n[] a, Data.Monoid.Monoid [Bivariant]\n[] a) =>\nGHC.Types.Int -> (JoinList.JoinList a b) -> (JoinList.JoinList a b)","ident":"JoinList.dropJ","row":59,"col":17},"35":{"ann":"{v : (JoinList.JoinList a b) | v == y}","ident":"y","row":59,"col":35},"26":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}","ident":"_","row":59,"col":26},"24":{"ann":"{v : GHC.Types.Int | v == i}","ident":"i","row":59,"col":24},"32":{"ann":"{v : (JoinList.JoinList a b) | v == x}","ident":"x","row":59,"col":32}},"52":{"37":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}","ident":"_","row":52,"col":37},"43":{"ann":"{v : (JoinList.JoinList a b) | v == x}","ident":"x","row":52,"col":43},"35":{"ann":"GHC.Types.Int","ident":"ds_d6TT","row":52,"col":35},"39":{"ann":"(JoinList.JoinList a b) -> GHC.Types.Int","ident":"_","row":52,"col":39},"46":{"ann":"{v : (JoinList.JoinList a b) | v == y}","ident":"y","row":52,"col":46},"27":{"ann":"forall a b.\n(Sized.Sized [Contravariant]\n[] a, Data.Monoid.Monoid [Bivariant]\n[] a) =>\nGHC.Types.Int -> (JoinList.JoinList a b) -> (Data.Maybe.Maybe b)","ident":"JoinList.indexJ","row":52,"col":27}},"117":{"14":{"ann":"(JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])","ident":"_","row":117,"col":14},"5":{"ann":"(JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])","ident":"buffer","row":117,"col":5}},"103":{"14":{"ann":"(JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> GHC.Types.Int","ident":"_","row":103,"col":14},"3":{"ann":"(JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> GHC.Types.Int","ident":"$cnumLines","row":103,"col":3}},"20":{"13":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int\n-> {v : GHC.Types.Int | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}","ident":"_","row":20,"col":13},"3":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int\n-> {v : GHC.Types.Int | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}","ident":"$cmappend","row":20,"col":3}},"46":{"28":{"ann":"(a -> GHC.Types.Int) -> a -> GHC.Types.Int","ident":"_","row":46,"col":28},"13":{"ann":"Sized.Size -> GHC.Types.Int","ident":"Sized.getSize","row":46,"col":13},"30":{"ann":"(JoinList.JoinList a b) -> a","ident":"_","row":46,"col":30},"23":{"ann":"a -> Sized.Size","ident":"lq_anf__d6V1","row":46,"col":23},"34":{"ann":"(JoinList.JoinList a b)","ident":"ds_d6TQ","row":46,"col":34},"21":{"ann":"(Sized.Size -> GHC.Types.Int)\n-> (a -> Sized.Size) -> a -> exists [Sized.Size].GHC.Types.Int","ident":"_","row":46,"col":21}},"93":{"3":{"ann":"GHC.Types.Int\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> (Data.Maybe.Maybe [GHC.Types.Char])","ident":"$cline","row":93,"col":3},"10":{"ann":"GHC.Types.Int\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> (Data.Maybe.Maybe [GHC.Types.Char])","ident":"_","row":93,"col":10}},"58":{"7":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 < v}","ident":"_","row":58,"col":7},"25":{"ann":"{v : (JoinList.JoinList a b) | v == x}","ident":"x","row":58,"col":25},"13":{"ann":"{v : (JoinList.JoinList a b) | v == x}","ident":"x","row":58,"col":13},"31":{"ann":"{v : (JoinList.JoinList a b) | v == y}","ident":"y","row":58,"col":31},"17":{"ann":"forall a b.\n(Sized.Sized [Contravariant]\n[] a, Data.Monoid.Monoid [Bivariant]\n[] a) =>\nGHC.Types.Int -> (JoinList.JoinList a b) -> (JoinList.JoinList a b)","ident":"JoinList.dropJ","row":58,"col":17},"23":{"ann":"{v : GHC.Types.Int | v == i}","ident":"i","row":58,"col":23},"5":{"ann":"{v : GHC.Types.Int | v == i}","ident":"i","row":58,"col":5},"27":{"ann":"(JoinList.JoinList a b)\n-> (JoinList.JoinList a b) -> (JoinList.JoinList a b)","ident":"_","row":58,"col":27},"9":{"ann":"(JoinList.JoinList a b) -> GHC.Types.Int","ident":"_","row":58,"col":9}},"63":{"15":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 <= v}","ident":"_","row":63,"col":15},"7":{"ann":"GHC.Types.Int","ident":"i","row":63,"col":7},"13":{"ann":"{v : GHC.Types.Int | v == i}","ident":"i","row":63,"col":13},"22":{"ann":"forall a b. (JoinList.JoinList a b)","ident":"JoinList.Empty","row":63,"col":22},"1":{"ann":"forall a b.\n(Sized.Sized [Contravariant]\n[] a, Data.Monoid.Monoid [Bivariant]\n[] a) =>\nGHC.Types.Int -> (JoinList.JoinList a b) -> (JoinList.JoinList a b)","ident":"JoinList.takeJ","row":63,"col":1},"18":{"ann":"{v : GHC.Types.Int | v == (0  :  int)}","ident":"lq_anf__d6VI","row":63,"col":18},"9":{"ann":"(JoinList.JoinList a b)","ident":"l","row":63,"col":9}},"99":{"15":{"ann":"GHC.Types.Int","ident":"n","row":99,"col":15},"37":{"ann":"(JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])","ident":"_","row":99,"col":37},"31":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}","ident":"_","row":99,"col":31},"19":{"ann":"(JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])","ident":"b","row":99,"col":19},"66":{"ann":"{v : (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char]) | v == b}","ident":"b","row":99,"col":66},"30":{"ann":"{v : GHC.Types.Int | v == n}","ident":"n","row":99,"col":30},"17":{"ann":"[GHC.Types.Char]","ident":"s","row":99,"col":17},"35":{"ann":"{v : (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char]) | v == b}","ident":"b","row":99,"col":35},"23":{"ann":"GHC.Types.Int\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])","ident":"_","row":99,"col":23},"52":{"ann":"{v : [GHC.Types.Char] | v == s && len v >= 0}","ident":"s","row":99,"col":52},"64":{"ann":"{v : GHC.Types.Int | v == n}","ident":"n","row":99,"col":64},"58":{"ann":"GHC.Types.Int\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])","ident":"_","row":99,"col":58},"41":{"ann":"(Buffer.Buffer (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char]))","ident":"JoinList.$fBufferJoinList","row":99,"col":41},"3":{"ann":"GHC.Types.Int\n-> [GHC.Types.Char]\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])","ident":"$creplaceLine","row":99,"col":3},"54":{"ann":"(JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])","ident":"_","row":99,"col":54},"32":{"ann":"{v : GHC.Types.Int | v == (1  :  int)}","ident":"lq_anf__d6X1","row":99,"col":32}},"109":{"28":{"ann":"(Scrabble.Score, Sized.Size) -> Scrabble.Score","ident":"lq_anf__d6VV","row":109,"col":28},"17":{"ann":"Scrabble.Score -> GHC.Types.Int","ident":"Scrabble.getScore","row":109,"col":17},"26":{"ann":"(Scrabble.Score -> GHC.Types.Int)\n-> ((Scrabble.Score, Sized.Size) -> Scrabble.Score)\n-> (Scrabble.Score, Sized.Size)\n-> exists [Scrabble.Score].GHC.Types.Int","ident":"_","row":109,"col":26},"34":{"ann":"(JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> (Scrabble.Score, Sized.Size)","ident":"_","row":109,"col":34},"38":{"ann":"(JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])","ident":"ds_d6UD","row":109,"col":38},"32":{"ann":"((Scrabble.Score, Sized.Size) -> GHC.Types.Int)\n-> (Scrabble.Score, Sized.Size) -> GHC.Types.Int","ident":"_","row":109,"col":32}},"33":{"25":{"ann":"a -> a -> a","ident":"_","row":33,"col":25},"50":{"ann":"(JoinList.JoinList a b)","ident":"ds_d6U4","row":33,"col":50},"17":{"ann":"a\n-> (JoinList.JoinList a b)\n-> (JoinList.JoinList a b)\n-> (JoinList.JoinList a b)","ident":"_","row":33,"col":17},"52":{"ann":"{v : (JoinList.JoinList a b) | v == y}","ident":"y","row":33,"col":52},"34":{"ann":"(JoinList.JoinList a b) -> a","ident":"_","row":33,"col":34},"46":{"ann":"{v : (JoinList.JoinList a b) | v == y}","ident":"y","row":33,"col":46},"38":{"ann":"(JoinList.JoinList a b)","ident":"ds_d6U4","row":33,"col":38},"42":{"ann":"(JoinList.JoinList a b) -> a","ident":"_","row":33,"col":42}},"38":{"22":{"ann":"{VV : a | VV == t}","ident":"t","row":38,"col":22}},"65":{"7":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 < v}","ident":"_","row":65,"col":7},"25":{"ann":"{v : (JoinList.JoinList a b) | v == x}","ident":"x","row":65,"col":25},"13":{"ann":"{v : (JoinList.JoinList a b) | v == x}","ident":"x","row":65,"col":13},"17":{"ann":"forall a b.\n(Sized.Sized [Contravariant]\n[] a, Data.Monoid.Monoid [Bivariant]\n[] a) =>\nGHC.Types.Int -> (JoinList.JoinList a b) -> (JoinList.JoinList a b)","ident":"JoinList.takeJ","row":65,"col":17},"23":{"ann":"{v : GHC.Types.Int | v == i}","ident":"i","row":65,"col":23},"5":{"ann":"{v : GHC.Types.Int | v == i}","ident":"i","row":65,"col":5},"9":{"ann":"(JoinList.JoinList a b) -> GHC.Types.Int","ident":"_","row":65,"col":9}},"79":{"10":{"ann":"(Buffer.Buffer (JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char]))","ident":"JoinList.$fBufferJoinList","row":79,"col":10}},"60":{"13":{"ann":"(JoinList.JoinList a b)","ident":"_","row":60,"col":13}},"32":{"17":{"ann":"(JoinList.JoinList a b)","ident":"ds_d6U4","row":32,"col":17}},"108":{"17":{"ann":"x1:GHC.Prim.Int# -> {v : GHC.Types.Int | v == (x1  :  int)}","ident":"GHC.Types.I#","row":108,"col":17},"3":{"ann":"(JoinList.JoinList (Scrabble.Score, Sized.Size) [GHC.Types.Char])\n-> GHC.Types.Int","ident":"$cvalue","row":108,"col":3}}},"errors":[{"start":{"line":52,"column":35},"stop":{"line":52,"column":44},"message":"/Users/matt/Dropbox/cis194/07/flycheck_JoinList.hs:52:35-43: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Int | VV == ?c && VV == ?b - ?a\n \n  not a subtype of Required type\n    VV : Int | VV >= 0 && VV < ?b\n \n  In Context\n    VV : Int | VV == ?c && VV == ?b - ?a\n    ?a : Int\n    ?c : Int | ?c == ?b - ?a\n    ?b : Int"},{"start":{"line":51,"column":34},"stop":{"line":51,"column":35},"message":"/Users/matt/Dropbox/cis194/07/flycheck_JoinList.hs:51:34: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Int | VV == ?a\n \n  not a subtype of Required type\n    VV : Int | VV >= 0 && VV < ?a\n \n  In Context\n    VV : Int | VV == ?a\n    ?a : Int"},{"start":{"line":52,"column":35},"stop":{"line":52,"column":44},"message":"/Users/matt/Dropbox/cis194/07/flycheck_JoinList.hs:52:35-43: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Int | VV == ?c && VV == ?b - ?a\n \n  not a subtype of Required type\n    VV : Int | VV >= 0 && VV < ?b\n \n  In Context\n    VV : Int | VV == ?c && VV == ?b - ?a\n    ?a : Int\n    ?c : Int | ?c == ?b - ?a\n    ?b : Int"},{"start":{"line":51,"column":34},"stop":{"line":51,"column":35},"message":"/Users/matt/Dropbox/cis194/07/flycheck_JoinList.hs:51:34: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Int | VV == ?a\n \n  not a subtype of Required type\n    VV : Int | VV >= 0 && VV < ?a\n \n  In Context\n    VV : Int | VV == ?a\n    ?a : Int"},{"start":{"line":52,"column":35},"stop":{"line":52,"column":44},"message":"/Users/matt/Dropbox/cis194/07/flycheck_JoinList.hs:52:35-43: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Int | VV == ?c && VV == ?b - ?a\n \n  not a subtype of Required type\n    VV : Int | VV >= 0 && VV < ?b\n \n  In Context\n    VV : Int | VV == ?c && VV == ?b - ?a\n    ?a : Int\n    ?c : Int | ?c == ?b - ?a\n    ?b : Int"},{"start":{"line":51,"column":34},"stop":{"line":51,"column":35},"message":"/Users/matt/Dropbox/cis194/07/flycheck_JoinList.hs:51:34: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Int | VV == ?a\n \n  not a subtype of Required type\n    VV : Int | VV >= 0 && VV < ?a\n \n  In Context\n    VV : Int | VV == ?a\n    ?a : Int"},{"start":{"line":59,"column":24},"stop":{"line":59,"column":33},"message":"/Users/matt/Dropbox/cis194/07/flycheck_JoinList.hs:59:24-32: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Int | VV == ?b && VV == i - ?a\n \n  not a subtype of Required type\n    VV : Int | VV >= 0 && VV < i\n \n  In Context\n    VV : Int | VV == ?b && VV == i - ?a\n    i  : Int\n    ?a : Int\n    ?b : Int | ?b == i - ?a"},{"start":{"line":58,"column":23},"stop":{"line":58,"column":24},"message":"/Users/matt/Dropbox/cis194/07/flycheck_JoinList.hs:58:23: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Int | VV == i\n \n  not a subtype of Required type\n    VV : Int | VV >= 0 && VV < i\n \n  In Context\n    VV : Int | VV == i\n    i  : Int"},{"start":{"line":66,"column":30},"stop":{"line":66,"column":39},"message":"/Users/matt/Dropbox/cis194/07/flycheck_JoinList.hs:66:30-38: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Int | VV == ?b && VV == i - ?a\n \n  not a subtype of Required type\n    VV : Int | VV >= 0 && VV < i\n \n  In Context\n    VV : Int | VV == ?b && VV == i - ?a\n    i  : Int\n    ?a : Int\n    ?b : Int | ?b == i - ?a"},{"start":{"line":65,"column":23},"stop":{"line":65,"column":24},"message":"/Users/matt/Dropbox/cis194/07/flycheck_JoinList.hs:65:23: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Int | VV == i\n \n  not a subtype of Required type\n    VV : Int | VV >= 0 && VV < i\n \n  In Context\n    VV : Int | VV == i\n    i  : Int"}]}