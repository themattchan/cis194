7:37-7:39::Scrabble.$fEqScore :: "(GHC.Classes.Eq Scrabble.Score)"
7:41-7:44::Scrabble.$fOrdScore :: "(GHC.Classes.Ord Scrabble.Score)"
7:46-7:50::Scrabble.$fShowScore :: "(GHC.Show.Show Scrabble.Score)"
7:52-7:55::Scrabble.$fNumScore :: "(GHC.Num.Num Scrabble.Score)"
9:1-9:9::Scrabble.getScore :: "Scrabble.Score -> GHC.Types.Int"
11:10-11:22::Scrabble.$fMonoidScore :: "(Data.Monoid.Monoid Scrabble.Score)"
12:3-12:9::$cmempty :: "Scrabble.Score"
12:13-12:18::_ :: "GHC.Types.Int -> Scrabble.Score"
12:19-12:20::lq_anf__d21m :: "{v : GHC.Types.Int | v == (0  :  int)}"
13:3-13:10::$cmappend :: "x1:Scrabble.Score\n-> x2:Scrabble.Score -> {v : Scrabble.Score | v == x1 + x2}"
13:13-13:16::_ :: "x1:Scrabble.Score\n-> x2:Scrabble.Score -> {v : Scrabble.Score | v == x1 + x2}"
15:1-15:12::Scrabble.charWeights :: "[GHC.Types.Int]"
15:15-15:70::lq_anf__d21i :: "{v : [GHC.Types.Int] | null v <=> false && len v >= 0}"
15:16-15:17::lq_anf__d20t :: "{v : GHC.Types.Int | v == (1  :  int)}"
15:18-15:19::lq_anf__d20u :: "{v : GHC.Types.Int | v == (3  :  int)}"
15:20-15:21::lq_anf__d20v :: "{v : GHC.Types.Int | v == (3  :  int)}"
15:22-15:23::lq_anf__d20w :: "{v : GHC.Types.Int | v == (2  :  int)}"
15:24-15:25::lq_anf__d20x :: "{v : GHC.Types.Int | v == (1  :  int)}"
15:26-15:27::lq_anf__d20y :: "{v : GHC.Types.Int | v == (4  :  int)}"
15:28-15:29::lq_anf__d20z :: "{v : GHC.Types.Int | v == (2  :  int)}"
15:30-15:31::lq_anf__d20A :: "{v : GHC.Types.Int | v == (4  :  int)}"
15:32-15:33::lq_anf__d20B :: "{v : GHC.Types.Int | v == (1  :  int)}"
15:34-15:35::lq_anf__d20C :: "{v : GHC.Types.Int | v == (8  :  int)}"
15:36-15:37::lq_anf__d20D :: "{v : GHC.Types.Int | v == (5  :  int)}"
15:38-15:39::lq_anf__d20E :: "{v : GHC.Types.Int | v == (1  :  int)}"
15:40-15:41::lq_anf__d20F :: "{v : GHC.Types.Int | v == (3  :  int)}"
15:42-15:43::lq_anf__d20G :: "{v : GHC.Types.Int | v == (1  :  int)}"
15:44-15:45::lq_anf__d20H :: "{v : GHC.Types.Int | v == (1  :  int)}"
15:46-15:47::lq_anf__d20I :: "{v : GHC.Types.Int | v == (3  :  int)}"
15:48-15:50::lq_anf__d20J :: "{v : GHC.Types.Int | v == (10  :  int)}"
15:51-15:52::lq_anf__d20K :: "{v : GHC.Types.Int | v == (1  :  int)}"
15:53-15:54::lq_anf__d20L :: "{v : GHC.Types.Int | v == (1  :  int)}"
15:55-15:56::lq_anf__d20M :: "{v : GHC.Types.Int | v == (1  :  int)}"
15:57-15:58::lq_anf__d20N :: "{v : GHC.Types.Int | v == (1  :  int)}"
15:59-15:60::lq_anf__d20O :: "{v : GHC.Types.Int | v == (4  :  int)}"
15:61-15:62::lq_anf__d20P :: "{v : GHC.Types.Int | v == (4  :  int)}"
15:63-15:64::lq_anf__d20Q :: "{v : GHC.Types.Int | v == (8  :  int)}"
15:65-15:66::lq_anf__d20R :: "{v : GHC.Types.Int | v == (4  :  int)}"
15:67-15:69::lq_anf__d20S :: "{v : GHC.Types.Int | v == (10  :  int)}"
18:1-18:6::Scrabble.score :: "GHC.Types.Char -> Scrabble.Score"
18:7-18:8::c :: "GHC.Types.Char"
18:15-18:25::scoreTable :: "{v : [(GHC.Types.Char, GHC.Types.Int)] | len v <= len Scrabble.charWeights}"
18:28-18:31::_ :: "x1:[GHC.Types.Char]\n-> x2:[GHC.Types.Int]\n-> {v : [(GHC.Types.Char, GHC.Types.Int)] | len x1 == len x2 => len v == len x1 && len v <= len x1 && len v <= len x2}"
18:32-18:42::lq_anf__d21Y :: "{v : [GHC.Types.Char] | len v >= 0}"
18:33-18:36::lq_anf__d21W :: "GHC.Types.Char"
18:38-18:41::lq_anf__d21X :: "GHC.Types.Char"
18:43-18:54::Scrabble.charWeights :: "{v : [GHC.Types.Int] | v == Scrabble.charWeights && len v >= 0}"
19:8-19:14::_ :: "GHC.Types.Char\n-> [(GHC.Types.Char, GHC.Types.Int)]\n-> (Data.Maybe.Maybe GHC.Types.Int)"
19:16-19:23::_ :: "GHC.Types.Char -> GHC.Types.Char"
19:24-19:25::c :: "{v : GHC.Types.Char | v == c}"
19:27-19:37::scoreTable :: "{v : [(GHC.Types.Char, GHC.Types.Int)] | v == scoreTable && len v >= 0 && len v <= len Scrabble.charWeights}"
20:16-20:21::_ :: "GHC.Types.Int -> Scrabble.Score"
20:22-20:23::s :: "{v : GHC.Types.Int | v == s}"
21:16-21:21::_ :: "GHC.Types.Int -> Scrabble.Score"
21:22-21:23::lq_anf__d222 :: "{v : GHC.Types.Int | v == (0  :  int)}"
24:1-24:12::Scrabble.scoreString :: "[GHC.Types.Char] -> Scrabble.Score"
24:15-24:22::lq_anf__d22a :: "[Scrabble.Score] -> Scrabble.Score"
24:23-24:24::_ :: "([Scrabble.Score] -> Scrabble.Score)\n-> ([GHC.Types.Char] -> [Scrabble.Score])\n-> [GHC.Types.Char]\n-> exists [[Scrabble.Score]].Scrabble.Score"
24:25-24:28::_ :: "(GHC.Types.Char -> Scrabble.Score)\n-> x3:[GHC.Types.Char] -> {v : [Scrabble.Score] | len v == len x3}"
24:29-24:34::Scrabble.score :: "GHC.Types.Char -> Scrabble.Score"